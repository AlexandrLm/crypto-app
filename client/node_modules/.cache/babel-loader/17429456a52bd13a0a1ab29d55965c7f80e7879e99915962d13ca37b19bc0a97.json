{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alex\\\\Desktop\\\\crypto-app\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState('');\n  const [encryptedText, setEncryptedText] = useState('');\n  const [encryptedSessionKey, setEncryptedSessionKey] = useState('');\n  const [result, setResult] = useState('');\n  const [publicKey, setPublicKey] = useState('');\n  const [privateKey, setPrivateKey] = useState('');\n  const [error, setError] = useState('');\n  const [showFullPublicKey, setShowFullPublicKey] = useState(false);\n  const [showFullPrivateKey, setShowFullPrivateKey] = useState(false);\n  const [digest, setDigest] = useState('');\n  const [hash, setHash] = useState('');\n  const [signature, setSignature] = useState('');\n  useEffect(() => {\n    const fetchKeys = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/generate-keys', {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log('Keys response:', response.data);\n        setPublicKey(response.data.rsa_public_key);\n        setPrivateKey(response.data.rsa_private_key);\n        setError('');\n      } catch (error) {\n        console.error('Error fetching keys:', error.response ? error.response.data : error.message);\n        setError(`Failed to load keys. Details: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n      }\n    };\n    fetchKeys();\n  }, []);\n  const generateDigest = text => {\n    if (!text) return '';\n    return text.split(' ').map(word => {\n      let result = '';\n      for (let i = 2; i < word.length; i += 3) {\n        result += word[i] || '';\n      }\n      return result;\n    }).join('');\n  };\n  const handleEncrypt = async () => {\n    if (!publicKey || !privateKey) {\n      setError('Ключи не сгенерированы. Пожалуйста, подождите...');\n      return;\n    }\n    const calculatedDigest = generateDigest(text);\n    setDigest(calculatedDigest);\n    try {\n      const hashResponse = await axios.post('http://localhost:5000/api/hash', {\n        digest: calculatedDigest\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const {\n        hash: computedHash,\n        h1\n      } = hashResponse.data;\n      setHash(computedHash);\n      console.log(`Hash: ${computedHash}, H1: ${h1}`);\n      const signResponse = await axios.post('http://localhost:5000/api/sign', {\n        hash: computedHash\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const {\n        signature: computedSignature\n      } = signResponse.data;\n      setSignature(computedSignature);\n      console.log(`Signature: ${computedSignature}`);\n      const encryptResponse = await axios.post('http://localhost:5000/api/encrypt', {\n        text: text,\n        digest: calculatedDigest\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const {\n        encrypted_text,\n        encrypted_session_key,\n        signature\n      } = encryptResponse.data;\n      setEncryptedText(`${encrypted_session_key}||${encrypted_text}`);\n      setEncryptedSessionKey(encrypted_session_key);\n      setResult(`${encrypted_session_key}||${encrypted_text}`);\n      setError('');\n    } catch (error) {\n      console.error('Error:', error.response ? error.response.data : error.message);\n      setError(`Ошибка. Детали: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n    }\n  };\n  const handleDecrypt = async () => {\n    if (!encryptedText) {\n      setError('Введите зашифрованный текст');\n      return;\n    }\n    const [encryptedSessionKey, encryptedTextPart] = encryptedText.split('||');\n    if (!encryptedSessionKey || !encryptedTextPart) {\n      setError('Некорректный формат зашифрованного текста');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/decrypt', {\n        encrypted_text: encryptedTextPart,\n        encrypted_session_key: encryptedSessionKey,\n        signature: signature,\n        digest: digest\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const {\n        decrypted,\n        signature_valid\n      } = response.data;\n      setResult(`Decrypted: ${decrypted}, Signature Valid: ${signature_valid}`);\n      setError('');\n    } catch (error) {\n      console.error('Error decrypting:', error.response ? error.response.data : error.message);\n      setError(`Ошибка дешифрования. Детали: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n    }\n  };\n  const exportKey = (key, keyType) => {\n    const blob = new Blob([key], {\n      type: 'text/plain'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `${keyType}_key.pem`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n  const copyToClipboard = key => {\n    navigator.clipboard.writeText(key).then(() => {\n      alert('Copied to clipboard!');\n    }).catch(err => {\n      setError(`Failed to copy: ${err.message}`);\n    });\n  };\n  const exportDigest = () => {\n    const blob = new Blob([digest], {\n      type: 'text/plain'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'digest.txt';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n  const copyDigestToClipboard = () => {\n    navigator.clipboard.writeText(digest).then(() => {\n      alert('Digest copied to clipboard!');\n    }).catch(err => {\n      setError(`Failed to copy digest: ${err.message}`);\n    });\n  };\n  const handleImportKey = (event, keyType) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const keyContent = e.target.result;\n        try {\n          if (keyType === 'public' && !keyContent.includes('-----BEGIN RSA PUBLIC KEY-----')) {\n            throw new Error('Неверный формат публичного ключа');\n          }\n          if (keyType === 'private' && !keyContent.includes('-----BEGIN RSA PRIVATE KEY-----')) {\n            throw new Error('Неверный формат приватного ключа');\n          }\n          if (keyType === 'public') {\n            setPublicKey(keyContent);\n          } else if (keyType === 'private') {\n            setPrivateKey(keyContent);\n          }\n          setError('');\n        } catch (err) {\n          setError(`Ошибка импорта: ${err.message}`);\n        }\n      };\n      reader.readAsText(file);\n      event.target.value = '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Crypto App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section keys-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Keys\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"key-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Public Key:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: showFullPublicKey ? publicKey : `${publicKey.substring(0, 50)}...`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"show-full-btn\",\n          onClick: () => setShowFullPublicKey(!showFullPublicKey),\n          children: showFullPublicKey ? 'Скрыть' : 'Показать полностью'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"key-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => exportKey(publicKey, 'public'),\n          children: \"Export Public Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => copyToClipboard(publicKey),\n          children: \"Copy Public Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"file-input\",\n          children: [\"Import Public Key\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => handleImportKey(e, 'public'),\n            accept: \".pem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"key-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Private Key:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: showFullPrivateKey ? privateKey : `${privateKey.substring(0, 50)}...`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"show-full-btn\",\n          onClick: () => setShowFullPrivateKey(!showFullPrivateKey),\n          children: showFullPrivateKey ? 'Скрыть' : 'Показать полностью'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"key-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => exportKey(privateKey, 'private'),\n          children: \"Export Private Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => copyToClipboard(privateKey),\n          children: \"Copy Private Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"file-input\",\n          children: [\"Import Private Key\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => handleImportKey(e, 'private'),\n            accept: \".pem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Error:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 40\n        }, this), \" \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section encrypt-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Encrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: text,\n          onChange: e => setText(e.target.value),\n          placeholder: \"Enter text to encrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEncrypt,\n          children: \"Encrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Digest:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), \" \", digest, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: exportDigest,\n          children: \"Export Digest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: copyDigestToClipboard,\n          children: \"Copy Digest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Hash:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), \" \", hash]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Signature:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), \" \", signature]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Encrypted Session Key:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), \" \", encryptedSessionKey]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Encrypted Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), \" \", encryptedText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section decrypt-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Decrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: encryptedText,\n          onChange: e => setEncryptedText(e.target.value),\n          placeholder: \"Enter encrypted text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDecrypt,\n          children: \"Decrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Result:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), \" \", result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this)\n\n  // <div className=\"App\">\n  //   <h1>Crypto App</h1>\n\n  //   <div className=\"keys-section\">\n  //     <h3>Keys</h3>\n  //     <p>\n  //       <strong>Public Key:</strong> {showFullPublicKey ? publicKey : `${publicKey.substring(0, 50)}...`}\n  //       <button className=\"show-full-btn\" onClick={() => setShowFullPublicKey(!showFullPublicKey)}>\n  //         {showFullPublicKey ? 'Скрыть' : 'Показать полностью'}\n  //       </button>\n  //     </p>\n  //     <button onClick={() => exportKey(publicKey, 'public')} style={{ marginRight: '10px' }}>\n  //       Export Public Key\n  //     </button>\n  //     <button onClick={() => copyToClipboard(publicKey)} style={{ marginRight: '10px' }}>\n  //       Copy Public Key\n  //     </button>\n  //     <label>\n  //       Import Public Key\n  //       <input type=\"file\" onChange={(e) => handleImportKey(e, 'public')} accept=\".pem\" />\n  //     </label>\n  //     <p>\n  //       <strong>Private Key:</strong> {showFullPrivateKey ? privateKey : `${privateKey.substring(0, 50)}...`}\n  //       <button className=\"show-full-btn\" onClick={() => setShowFullPrivateKey(!showFullPrivateKey)}>\n  //         {showFullPrivateKey ? 'Скрыть' : 'Показать полностью'}\n  //       </button>\n  //     </p>\n  //     <button onClick={() => exportKey(privateKey, 'private')} style={{ marginRight: '10px' }}>\n  //       Export Private Key\n  //     </button>\n  //     <button onClick={() => copyToClipboard(privateKey)} style={{ marginRight: '10px' }}>\n  //       Copy Private Key\n  //     </button>\n  //     <label>\n  //       Import Private Key\n  //       <input type=\"file\" onChange={(e) => handleImportKey(e, 'private')} accept=\".pem\" />\n  //     </label>\n  //     {error && <p className=\"error\"><strong>Error:</strong> {error}</p>}\n  //   </div>\n\n  //   <div className=\"encrypt-section\">\n  //     <h3>Encrypt</h3>\n  //     <input\n  //       type=\"text\"\n  //       value={text}\n  //       onChange={(e) => setText(e.target.value)}\n  //       placeholder=\"Enter text to encrypt\"\n  //     />\n  //     <button onClick={handleEncrypt}>Encrypt</button>\n  //     <p><strong>Digest:</strong> {digest}</p>\n  //     <p><strong>Hash:</strong> {hash}</p>\n  //     <p><strong>Signature:</strong> {signature}</p>\n  //     <p><strong>Encrypted Session Key:</strong> {encryptedSessionKey}</p>\n  //     <p><strong>Encrypted Text:</strong> {encryptedText}</p>\n  //     <button onClick={exportDigest} style={{ marginRight: '10px' }}>\n  //       Export Digest\n  //     </button>\n  //     <button onClick={copyDigestToClipboard}>\n  //       Copy Digest\n  //     </button>\n  //   </div>\n\n  //   <div className=\"decrypt-section\">\n  //     <h3>Decrypt</h3>\n  //     <input\n  //       type=\"text\"\n  //       value={encryptedText}\n  //       onChange={(e) => setEncryptedText(e.target.value)}\n  //       placeholder=\"Enter encrypted text\"\n  //     />\n  //     <button onClick={handleDecrypt}>Decrypt</button>\n  //   </div>\n\n  //   <div className=\"result-section\">\n  //     <p><strong>Result:</strong> {result}</p>\n  //   </div>\n  // </div>\n  ;\n}\n_s(App, \"EfsT/lRJU+Sg+LPxVqCGYxqYK8w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","text","setText","encryptedText","setEncryptedText","encryptedSessionKey","setEncryptedSessionKey","result","setResult","publicKey","setPublicKey","privateKey","setPrivateKey","error","setError","showFullPublicKey","setShowFullPublicKey","showFullPrivateKey","setShowFullPrivateKey","digest","setDigest","hash","setHash","signature","setSignature","fetchKeys","response","get","headers","console","log","data","rsa_public_key","rsa_private_key","message","JSON","stringify","generateDigest","split","map","word","i","length","join","handleEncrypt","calculatedDigest","hashResponse","post","computedHash","h1","signResponse","computedSignature","encryptResponse","encrypted_text","encrypted_session_key","handleDecrypt","encryptedTextPart","decrypted","signature_valid","exportKey","key","keyType","blob","Blob","type","url","window","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","copyToClipboard","navigator","clipboard","writeText","then","alert","catch","err","exportDigest","copyDigestToClipboard","handleImportKey","event","file","target","files","reader","FileReader","onload","e","keyContent","includes","Error","readAsText","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","substring","onClick","onChange","accept","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/alex/Desktop/crypto-app/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [text, setText] = useState('');\n  const [encryptedText, setEncryptedText] = useState('');\n  const [encryptedSessionKey, setEncryptedSessionKey] = useState('');\n  const [result, setResult] = useState('');\n  const [publicKey, setPublicKey] = useState('');\n  const [privateKey, setPrivateKey] = useState('');\n  const [error, setError] = useState('');\n  const [showFullPublicKey, setShowFullPublicKey] = useState(false);\n  const [showFullPrivateKey, setShowFullPrivateKey] = useState(false);\n  const [digest, setDigest] = useState('');\n  const [hash, setHash] = useState('');\n  const [signature, setSignature] = useState('');\n\n  useEffect(() => {\n    const fetchKeys = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/generate-keys', {\n          headers: { 'Content-Type': 'application/json' },\n        });\n        console.log('Keys response:', response.data);\n        setPublicKey(response.data.rsa_public_key);\n        setPrivateKey(response.data.rsa_private_key);\n        setError('');\n      } catch (error) {\n        console.error('Error fetching keys:', error.response ? error.response.data : error.message);\n        setError(`Failed to load keys. Details: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n      }\n    };\n    fetchKeys();\n  }, []);\n\n  const generateDigest = (text) => {\n    if (!text) return '';\n    return text\n      .split(' ')\n      .map(word => {\n        let result = '';\n        for (let i = 2; i < word.length; i += 3) {\n          result += word[i] || '';\n        }\n        return result;\n      })\n      .join('');\n  };\n\n  const handleEncrypt = async () => {\n    if (!publicKey || !privateKey) {\n      setError('Ключи не сгенерированы. Пожалуйста, подождите...');\n      return;\n    }\n    const calculatedDigest = generateDigest(text);\n    setDigest(calculatedDigest);\n    try {\n      const hashResponse = await axios.post('http://localhost:5000/api/hash', {\n        digest: calculatedDigest,\n      }, {\n        headers: { 'Content-Type': 'application/json' },\n      });\n      const { hash: computedHash, h1 } = hashResponse.data;\n      setHash(computedHash);\n      console.log(`Hash: ${computedHash}, H1: ${h1}`);\n\n      const signResponse = await axios.post('http://localhost:5000/api/sign', {\n        hash: computedHash,\n      }, {\n        headers: { 'Content-Type': 'application/json' },\n      });\n      const { signature: computedSignature } = signResponse.data;\n      setSignature(computedSignature);\n      console.log(`Signature: ${computedSignature}`);\n\n      const encryptResponse = await axios.post('http://localhost:5000/api/encrypt', {\n        text: text,\n        digest: calculatedDigest,\n      }, {\n        headers: { 'Content-Type': 'application/json' },\n      });\n      const { encrypted_text, encrypted_session_key, signature } = encryptResponse.data;\n      setEncryptedText(`${encrypted_session_key}||${encrypted_text}`);\n      setEncryptedSessionKey(encrypted_session_key);\n      setResult(`${encrypted_session_key}||${encrypted_text}`);\n      setError('');\n    } catch (error) {\n      console.error('Error:', error.response ? error.response.data : error.message);\n      setError(`Ошибка. Детали: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n    }\n  };\n\n  const handleDecrypt = async () => {\n    if (!encryptedText) {\n      setError('Введите зашифрованный текст');\n      return;\n    }\n    const [encryptedSessionKey, encryptedTextPart] = encryptedText.split('||');\n    if (!encryptedSessionKey || !encryptedTextPart) {\n      setError('Некорректный формат зашифрованного текста');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/decrypt', {\n        encrypted_text: encryptedTextPart,\n        encrypted_session_key: encryptedSessionKey,\n        signature: signature,\n        digest: digest,\n      }, {\n        headers: { 'Content-Type': 'application/json' },\n      });\n      const { decrypted, signature_valid } = response.data;\n      setResult(`Decrypted: ${decrypted}, Signature Valid: ${signature_valid}`);\n      setError('');\n    } catch (error) {\n      console.error('Error decrypting:', error.response ? error.response.data : error.message);\n      setError(`Ошибка дешифрования. Детали: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n    }\n  };\n\n  const exportKey = (key, keyType) => {\n    const blob = new Blob([key], { type: 'text/plain' });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `${keyType}_key.pem`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n\n  const copyToClipboard = (key) => {\n    navigator.clipboard.writeText(key).then(() => {\n      alert('Copied to clipboard!');\n    }).catch(err => {\n      setError(`Failed to copy: ${err.message}`);\n    });\n  };\n\n  const exportDigest = () => {\n    const blob = new Blob([digest], { type: 'text/plain' });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'digest.txt';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n\n  const copyDigestToClipboard = () => {\n    navigator.clipboard.writeText(digest).then(() => {\n      alert('Digest copied to clipboard!');\n    }).catch(err => {\n      setError(`Failed to copy digest: ${err.message}`);\n    });\n  };\n\n  const handleImportKey = (event, keyType) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const keyContent = e.target.result;\n        try {\n          if (keyType === 'public' && !keyContent.includes('-----BEGIN RSA PUBLIC KEY-----')) {\n            throw new Error('Неверный формат публичного ключа');\n          }\n          if (keyType === 'private' && !keyContent.includes('-----BEGIN RSA PRIVATE KEY-----')) {\n            throw new Error('Неверный формат приватного ключа');\n          }\n          if (keyType === 'public') {\n            setPublicKey(keyContent);\n          } else if (keyType === 'private') {\n            setPrivateKey(keyContent);\n          }\n          setError('');\n        } catch (err) {\n          setError(`Ошибка импорта: ${err.message}`);\n        }\n      };\n      reader.readAsText(file);\n      event.target.value = '';\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Crypto App</h1>\n\n      <div className=\"section keys-section\">\n        <div className=\"section-header\">\n          <h3>Keys</h3>\n        </div>\n\n        <div className=\"key-display\">\n          <strong>Public Key:</strong>\n          <span>{showFullPublicKey ? publicKey : `${publicKey.substring(0, 50)}...`}</span>\n          <button \n            className=\"show-full-btn\" \n            onClick={() => setShowFullPublicKey(!showFullPublicKey)}\n          >\n            {showFullPublicKey ? 'Скрыть' : 'Показать полностью'}\n          </button>\n        </div>\n\n        <div className=\"key-actions\">\n          <button onClick={() => exportKey(publicKey, 'public')}>\n            Export Public Key\n          </button>\n          <button onClick={() => copyToClipboard(publicKey)}>\n            Copy Public Key\n          </button>\n          <label className=\"file-input\">\n            Import Public Key\n            <input \n              type=\"file\" \n              onChange={(e) => handleImportKey(e, 'public')} \n              accept=\".pem\" \n            />\n          </label>\n        </div>\n\n        <div className=\"key-display\">\n          <strong>Private Key:</strong>\n          <span>{showFullPrivateKey ? privateKey : `${privateKey.substring(0, 50)}...`}</span>\n          <button \n            className=\"show-full-btn\" \n            onClick={() => setShowFullPrivateKey(!showFullPrivateKey)}\n          >\n            {showFullPrivateKey ? 'Скрыть' : 'Показать полностью'}\n          </button>\n        </div>\n\n        <div className=\"key-actions\">\n          <button onClick={() => exportKey(privateKey, 'private')}>\n            Export Private Key\n          </button>\n          <button onClick={() => copyToClipboard(privateKey)}>\n            Copy Private Key\n          </button>\n          <label className=\"file-input\">\n            Import Private Key\n            <input \n              type=\"file\" \n              onChange={(e) => handleImportKey(e, 'private')} \n              accept=\".pem\" \n            />\n          </label>\n        </div>\n\n        {error && <p className=\"error\"><strong>Error:</strong> {error}</p>}\n      </div>\n\n      <div className=\"section encrypt-section\">\n        <div className=\"section-header\">\n          <h3>Encrypt</h3>\n        </div>\n\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            placeholder=\"Enter text to encrypt\"\n          />\n          <button onClick={handleEncrypt}>Encrypt</button>\n        </div>\n\n        <div className=\"result-item\">\n          <strong>Digest:</strong> {digest}\n          <button onClick={exportDigest}>Export Digest</button>\n          <button onClick={copyDigestToClipboard}>Copy Digest</button>\n        </div>\n        <div className=\"result-item\">\n          <strong>Hash:</strong> {hash}\n        </div>\n        <div className=\"result-item\">\n          <strong>Signature:</strong> {signature}\n        </div>\n        <div className=\"result-item\">\n          <strong>Encrypted Session Key:</strong> {encryptedSessionKey}\n        </div>\n        <div className=\"result-item\">\n          <strong>Encrypted Text:</strong> {encryptedText}\n        </div>\n      </div>\n\n      <div className=\"section decrypt-section\">\n        <div className=\"section-header\">\n          <h3>Decrypt</h3>\n        </div>\n\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            value={encryptedText}\n            onChange={(e) => setEncryptedText(e.target.value)}\n            placeholder=\"Enter encrypted text\"\n          />\n          <button onClick={handleDecrypt}>Decrypt</button>\n        </div>\n\n        <div className=\"result-item\">\n          <strong>Result:</strong> {result}\n        </div>\n      </div>\n    </div>\n\n    // <div className=\"App\">\n    //   <h1>Crypto App</h1>\n\n    //   <div className=\"keys-section\">\n    //     <h3>Keys</h3>\n    //     <p>\n    //       <strong>Public Key:</strong> {showFullPublicKey ? publicKey : `${publicKey.substring(0, 50)}...`}\n    //       <button className=\"show-full-btn\" onClick={() => setShowFullPublicKey(!showFullPublicKey)}>\n    //         {showFullPublicKey ? 'Скрыть' : 'Показать полностью'}\n    //       </button>\n    //     </p>\n    //     <button onClick={() => exportKey(publicKey, 'public')} style={{ marginRight: '10px' }}>\n    //       Export Public Key\n    //     </button>\n    //     <button onClick={() => copyToClipboard(publicKey)} style={{ marginRight: '10px' }}>\n    //       Copy Public Key\n    //     </button>\n    //     <label>\n    //       Import Public Key\n    //       <input type=\"file\" onChange={(e) => handleImportKey(e, 'public')} accept=\".pem\" />\n    //     </label>\n    //     <p>\n    //       <strong>Private Key:</strong> {showFullPrivateKey ? privateKey : `${privateKey.substring(0, 50)}...`}\n    //       <button className=\"show-full-btn\" onClick={() => setShowFullPrivateKey(!showFullPrivateKey)}>\n    //         {showFullPrivateKey ? 'Скрыть' : 'Показать полностью'}\n    //       </button>\n    //     </p>\n    //     <button onClick={() => exportKey(privateKey, 'private')} style={{ marginRight: '10px' }}>\n    //       Export Private Key\n    //     </button>\n    //     <button onClick={() => copyToClipboard(privateKey)} style={{ marginRight: '10px' }}>\n    //       Copy Private Key\n    //     </button>\n    //     <label>\n    //       Import Private Key\n    //       <input type=\"file\" onChange={(e) => handleImportKey(e, 'private')} accept=\".pem\" />\n    //     </label>\n    //     {error && <p className=\"error\"><strong>Error:</strong> {error}</p>}\n    //   </div>\n\n    //   <div className=\"encrypt-section\">\n    //     <h3>Encrypt</h3>\n    //     <input\n    //       type=\"text\"\n    //       value={text}\n    //       onChange={(e) => setText(e.target.value)}\n    //       placeholder=\"Enter text to encrypt\"\n    //     />\n    //     <button onClick={handleEncrypt}>Encrypt</button>\n    //     <p><strong>Digest:</strong> {digest}</p>\n    //     <p><strong>Hash:</strong> {hash}</p>\n    //     <p><strong>Signature:</strong> {signature}</p>\n    //     <p><strong>Encrypted Session Key:</strong> {encryptedSessionKey}</p>\n    //     <p><strong>Encrypted Text:</strong> {encryptedText}</p>\n    //     <button onClick={exportDigest} style={{ marginRight: '10px' }}>\n    //       Export Digest\n    //     </button>\n    //     <button onClick={copyDigestToClipboard}>\n    //       Copy Digest\n    //     </button>\n    //   </div>\n\n    //   <div className=\"decrypt-section\">\n    //     <h3>Decrypt</h3>\n    //     <input\n    //       type=\"text\"\n    //       value={encryptedText}\n    //       onChange={(e) => setEncryptedText(e.target.value)}\n    //       placeholder=\"Enter encrypted text\"\n    //     />\n    //     <button onClick={handleDecrypt}>Decrypt</button>\n    //   </div>\n\n    //   <div className=\"result-section\">\n    //     <p><strong>Result:</strong> {result}</p>\n    //   </div>\n    // </div>\n  );\n}\n\nexport default App;"],"mappings":"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AA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACrG,MAAM;MAAA;QAAAkG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH;;EAEL;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EAAA;AAEJ;AAAC5G,EAAA,CAlYQD,GAAG;AAAAmH,EAAA,GAAHnH,GAAG;AAoYZ,eAAeA,GAAG;AAAC,IAAAmH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}