{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alex\\\\Desktop\\\\crypto-app\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState('');\n  const [encryptedText, setEncryptedText] = useState('');\n  const [decryptedText, setDecryptedText] = useState('');\n  const [encryptedSessionKey, setEncryptedSessionKey] = useState('');\n  const [result, setResult] = useState('');\n  const [publicKey, setPublicKey] = useState('');\n  const [privateKey, setPrivateKey] = useState('');\n  const [error, setError] = useState('');\n  const [showFullPublicKey, setShowFullPublicKey] = useState(false);\n  const [showFullPrivateKey, setShowFullPrivateKey] = useState(false);\n  const [digest, setDigest] = useState('');\n  const [hash, setHash] = useState('');\n  const [signature, setSignature] = useState('');\n  const [encryptFile, setEncryptFile] = useState(null);\n  const [decryptFile, setDecryptFile] = useState(null);\n  useEffect(() => {\n    const fetchKeys = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/generate-keys', {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log('Keys response:', response.data);\n        setPublicKey(response.data.rsa_public_key);\n        setPrivateKey(response.data.rsa_private_key);\n        setError('');\n      } catch (error) {\n        console.error('Error fetching keys:', error.response ? error.response.data : error.message);\n        setError(`Failed to load keys. Details: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n      }\n    };\n    fetchKeys();\n  }, []);\n  const generateDigest = text => {\n    if (!text) return '';\n    return text.split(' ').map(word => {\n      let result = '';\n      for (let i = 2; i < word.length; i += 3) {\n        result += word[i] || '';\n      }\n      return result;\n    }).join('');\n  };\n  const handleEncrypt = async event => {\n    event.preventDefault();\n    if (!publicKey || !privateKey) {\n      setError('Ключи не сгенерированы. Пожалуйста, подождите...');\n      return;\n    }\n    let calculatedDigest = '';\n    let fileText = '';\n    if (encryptFile) {\n      const reader = new FileReader();\n      reader.onload = async e => {\n        fileText = e.target.result;\n        calculatedDigest = generateDigest(fileText);\n        setDigest(calculatedDigest);\n        try {\n          const formData = new FormData();\n          formData.append('file', encryptFile);\n          const response = await axios.post('http://localhost:5000/api/encrypt', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            },\n            responseType: 'blob' // Для обработки файла\n          });\n          const url = window.URL.createObjectURL(response.data);\n          const link = document.createElement('a');\n          link.href = url;\n          link.download = 'encrypted_data.txt';\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n          window.URL.revokeObjectURL(url);\n          setEncryptedText(''); // Очистка, так как файл скачан\n          setEncryptedSessionKey('');\n          setSignature('');\n          setError('');\n        } catch (error) {\n          console.error('Error:', error.response ? error.response.data : error.message);\n          setError(`Ошибка. Детали: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n        }\n      };\n      reader.readAsText(encryptFile);\n    } else {\n      calculatedDigest = generateDigest(text);\n      setDigest(calculatedDigest);\n      try {\n        const response = await axios.post('http://localhost:5000/api/encrypt', {\n          text: text,\n          digest: calculatedDigest\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          responseType: 'blob'\n        });\n        const url = window.URL.createObjectURL(response.data);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = 'encrypted_data.txt';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        window.URL.revokeObjectURL(url);\n        setEncryptedText(''); // Очистка, так как файл скачан\n        setEncryptedSessionKey('');\n        setSignature('');\n        setError('');\n      } catch (error) {\n        console.error('Error:', error.response ? error.response.data : error.message);\n        setError(`Ошибка. Детали: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n      }\n    }\n  };\n  const handleDecrypt = async event => {\n    event.preventDefault();\n    if (!encryptedText && !decryptFile) {\n      setError('Введите зашифрованный текст или загрузите файл');\n      return;\n    }\n    let encryptedSessionKey, encryptedTextPart;\n    if (decryptFile) {\n      const reader = new FileReader();\n      reader.onload = async e => {\n        const fileContent = e.target.result.trim();\n        [encryptedSessionKey, encryptedTextPart] = fileContent.split('||');\n        if (!encryptedSessionKey || !encryptedTextPart) {\n          setError('Некорректный формат файла, ожидаемый encrypted_session_key||encrypted_text');\n          return;\n        }\n        try {\n          const formData = new FormData();\n          const file = new Blob([fileContent], {\n            type: 'text/plain'\n          });\n          formData.append('file', file, 'encrypted_data.txt');\n          const response = await axios.post('http://localhost:5000/api/decrypt', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          const {\n            decrypted,\n            signature_valid\n          } = response.data;\n          setDecryptedText(`Decrypted: ${decrypted}, Signature Valid: ${signature_valid}`);\n          setError('');\n        } catch (error) {\n          console.error('Error decrypting:', error.response ? error.response.data : error.message);\n          setError(`Ошибка дешифрования. Детали: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n        }\n      };\n      reader.readAsText(decryptFile);\n    } else {\n      [encryptedSessionKey, encryptedTextPart] = result.split('||');\n      if (!encryptedSessionKey || !encryptedTextPart) {\n        setError('Некорректный формат зашифрованного текста');\n        return;\n      }\n      try {\n        const response = await axios.post('http://localhost:5000/api/decrypt', {\n          encrypted_text: encryptedTextPart,\n          encrypted_session_key: encryptedSessionKey,\n          signature: signature,\n          digest: digest\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const {\n          decrypted,\n          signature_valid\n        } = response.data;\n        setDecryptedText(`Decrypted: ${decrypted}, Signature Valid: ${signature_valid}`);\n        setError('');\n      } catch (error) {\n        console.error('Error decrypting:', error.response ? error.response.data : error.message);\n        setError(`Ошибка дешифрования. Детали: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n      }\n    }\n  };\n  const exportKey = (key, keyType) => {\n    const blob = new Blob([key], {\n      type: 'text/plain'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `${keyType}_key.pem`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n  const copyToClipboard = key => {\n    navigator.clipboard.writeText(key).then(() => {\n      alert('Copied to clipboard!');\n    }).catch(err => {\n      setError(`Failed to copy: ${err.message}`);\n    });\n  };\n  const exportDigest = () => {\n    const blob = new Blob([digest], {\n      type: 'text/plain'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'digest.txt';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n  const copyDigestToClipboard = () => {\n    navigator.clipboard.writeText(digest).then(() => {\n      alert('Digest copied to clipboard!');\n    }).catch(err => {\n      setError(`Failed to copy digest: ${err.message}`);\n    });\n  };\n  const handleImportKey = (event, keyType) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const keyContent = e.target.result;\n        try {\n          if (keyType === 'public' && !keyContent.includes('-----BEGIN RSA PUBLIC KEY-----')) {\n            throw new Error('Неверный формат публичного ключа');\n          }\n          if (keyType === 'private' && !keyContent.includes('-----BEGIN RSA PRIVATE KEY-----')) {\n            throw new Error('Неверный формат приватного ключа');\n          }\n          if (keyType === 'public') {\n            setPublicKey(keyContent);\n          } else if (keyType === 'private') {\n            setPrivateKey(keyContent);\n          }\n          setError('');\n        } catch (err) {\n          setError(`Ошибка импорта: ${err.message}`);\n        }\n      };\n      reader.readAsText(file);\n      event.target.value = '';\n    }\n  };\n  const exportResults = () => {\n    const results = {\n      digest,\n      hash,\n      signature,\n      encryptedSessionKey,\n      encryptedText,\n      result\n    };\n    const blob = new Blob([JSON.stringify(results, null, 2)], {\n      type: 'application/json'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'crypto_results.json';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n  const handleEncryptFileChange = event => {\n    setEncryptFile(event.target.files[0]);\n  };\n  const handleDecryptFileChange = event => {\n    setDecryptFile(event.target.files[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Crypto App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keys-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Keys\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Public Key:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), \" \", showFullPublicKey ? publicKey : `${publicKey.substring(0, 50)}...`, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"show-full-btn\",\n          onClick: () => setShowFullPublicKey(!showFullPublicKey),\n          children: showFullPublicKey ? 'Скрыть' : 'Показать полностью'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => exportKey(publicKey, 'public'),\n        style: {\n          marginRight: '10px'\n        },\n        children: \"Export Public Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => copyToClipboard(publicKey),\n        style: {\n          marginRight: '10px'\n        },\n        children: \"Copy Public Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Import Public Key\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => handleImportKey(e, 'public'),\n          accept: \".pem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Private Key:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), \" \", showFullPrivateKey ? privateKey : `${privateKey.substring(0, 50)}...`, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"show-full-btn\",\n          onClick: () => setShowFullPrivateKey(!showFullPrivateKey),\n          children: showFullPrivateKey ? 'Скрыть' : 'Показать полностью'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => exportKey(privateKey, 'private'),\n        style: {\n          marginRight: '10px'\n        },\n        children: \"Export Private Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => copyToClipboard(privateKey),\n        style: {\n          marginRight: '10px'\n        },\n        children: \"Copy Private Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Import Private Key\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => handleImportKey(e, 'private'),\n          accept: \".pem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Error:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 40\n        }, this), \" \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"encrypt-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Encrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Enter text to encrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"or Upload File\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleEncryptFileChange,\n          accept: \".txt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEncrypt,\n        children: \"Encrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Digest:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 12\n        }, this), \" \", digest]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Hash:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 12\n        }, this), \" \", hash]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Signature:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 12\n        }, this), \" \", signature]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Encrypted Session Key:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 12\n        }, this), \" \", encryptedSessionKey]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Encrypted Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 12\n        }, this), \" \", encryptedText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportDigest,\n        style: {\n          marginRight: '10px'\n        },\n        children: \"Export Digest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: copyDigestToClipboard,\n        style: {\n          marginRight: '10px'\n        },\n        children: \"Copy Digest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportResults,\n        children: \"Export All Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"decrypt-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Decrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Encrypted Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 12\n        }, this), \" \", encryptedText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: encryptedText,\n        onChange: e => setEncryptedText(e.target.value),\n        placeholder: \"Enter encrypted text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"or Upload Encrypted File\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleDecryptFileChange,\n          accept: \".txt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDecrypt,\n        children: \"Decrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-section\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Decrypted Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 12\n        }, this), \" \", decryptedText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"s1FUDBQGBKer76BKwvPQ1k7vOYc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","text","setText","encryptedText","setEncryptedText","decryptedText","setDecryptedText","encryptedSessionKey","setEncryptedSessionKey","result","setResult","publicKey","setPublicKey","privateKey","setPrivateKey","error","setError","showFullPublicKey","setShowFullPublicKey","showFullPrivateKey","setShowFullPrivateKey","digest","setDigest","hash","setHash","signature","setSignature","encryptFile","setEncryptFile","decryptFile","setDecryptFile","fetchKeys","response","get","headers","console","log","data","rsa_public_key","rsa_private_key","message","JSON","stringify","generateDigest","split","map","word","i","length","join","handleEncrypt","event","preventDefault","calculatedDigest","fileText","reader","FileReader","onload","e","target","formData","FormData","append","post","responseType","url","window","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","readAsText","handleDecrypt","encryptedTextPart","fileContent","trim","file","Blob","type","decrypted","signature_valid","encrypted_text","encrypted_session_key","exportKey","key","keyType","blob","copyToClipboard","navigator","clipboard","writeText","then","alert","catch","err","exportDigest","copyDigestToClipboard","handleImportKey","files","keyContent","includes","Error","value","exportResults","results","handleEncryptFileChange","handleDecryptFileChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","substring","onClick","style","marginRight","onChange","accept","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/alex/Desktop/crypto-app/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [text, setText] = useState('');\n  const [encryptedText, setEncryptedText] = useState('');\n  const [decryptedText, setDecryptedText] = useState('');\n  const [encryptedSessionKey, setEncryptedSessionKey] = useState('');\n  const [result, setResult] = useState('');\n  const [publicKey, setPublicKey] = useState('');\n  const [privateKey, setPrivateKey] = useState('');\n  const [error, setError] = useState('');\n  const [showFullPublicKey, setShowFullPublicKey] = useState(false);\n  const [showFullPrivateKey, setShowFullPrivateKey] = useState(false);\n  const [digest, setDigest] = useState('');\n  const [hash, setHash] = useState('');\n  const [signature, setSignature] = useState('');\n  const [encryptFile, setEncryptFile] = useState(null);\n  const [decryptFile, setDecryptFile] = useState(null);\n\n  useEffect(() => {\n    const fetchKeys = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/generate-keys', {\n          headers: { 'Content-Type': 'application/json' },\n        });\n        console.log('Keys response:', response.data);\n        setPublicKey(response.data.rsa_public_key);\n        setPrivateKey(response.data.rsa_private_key);\n        setError('');\n      } catch (error) {\n        console.error('Error fetching keys:', error.response ? error.response.data : error.message);\n        setError(`Failed to load keys. Details: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n      }\n    };\n    fetchKeys();\n  }, []);\n\n  const generateDigest = (text) => {\n    if (!text) return '';\n    return text\n      .split(' ')\n      .map(word => {\n        let result = '';\n        for (let i = 2; i < word.length; i += 3) {\n          result += word[i] || '';\n        }\n        return result;\n      })\n      .join('');\n  };\n\n  const handleEncrypt = async (event) => {\n    event.preventDefault();\n    if (!publicKey || !privateKey) {\n      setError('Ключи не сгенерированы. Пожалуйста, подождите...');\n      return;\n    }\n    let calculatedDigest = '';\n    let fileText = '';\n    if (encryptFile) {\n      const reader = new FileReader();\n      reader.onload = async (e) => {\n        fileText = e.target.result;\n        calculatedDigest = generateDigest(fileText);\n        setDigest(calculatedDigest);\n        try {\n          const formData = new FormData();\n          formData.append('file', encryptFile);\n          const response = await axios.post('http://localhost:5000/api/encrypt', formData, {\n            headers: { 'Content-Type': 'multipart/form-data' },\n            responseType: 'blob', // Для обработки файла\n          });\n          const url = window.URL.createObjectURL(response.data);\n          const link = document.createElement('a');\n          link.href = url;\n          link.download = 'encrypted_data.txt';\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n          window.URL.revokeObjectURL(url);\n          setEncryptedText(''); // Очистка, так как файл скачан\n          setEncryptedSessionKey('');\n          setSignature('');\n          setError('');\n        } catch (error) {\n          console.error('Error:', error.response ? error.response.data : error.message);\n          setError(`Ошибка. Детали: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n        }\n      };\n      reader.readAsText(encryptFile);\n    } else {\n      calculatedDigest = generateDigest(text);\n      setDigest(calculatedDigest);\n      try {\n        const response = await axios.post('http://localhost:5000/api/encrypt', {\n          text: text,\n          digest: calculatedDigest,\n        }, {\n          headers: { 'Content-Type': 'application/json' },\n          responseType: 'blob',\n        });\n        const url = window.URL.createObjectURL(response.data);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = 'encrypted_data.txt';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        window.URL.revokeObjectURL(url);\n        setEncryptedText(''); // Очистка, так как файл скачан\n        setEncryptedSessionKey('');\n        setSignature('');\n        setError('');\n      } catch (error) {\n        console.error('Error:', error.response ? error.response.data : error.message);\n        setError(`Ошибка. Детали: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n      }\n    }\n  };\n\n  const handleDecrypt = async (event) => {\n    event.preventDefault();\n    if (!encryptedText && !decryptFile) {\n      setError('Введите зашифрованный текст или загрузите файл');\n      return;\n    }\n    let encryptedSessionKey, encryptedTextPart;\n    if (decryptFile) {\n      const reader = new FileReader();\n      reader.onload = async (e) => {\n        const fileContent = e.target.result.trim();\n        [encryptedSessionKey, encryptedTextPart] = fileContent.split('||');\n        if (!encryptedSessionKey || !encryptedTextPart) {\n          setError('Некорректный формат файла, ожидаемый encrypted_session_key||encrypted_text');\n          return;\n        }\n        try {\n          const formData = new FormData();\n          const file = new Blob([fileContent], { type: 'text/plain' });\n          formData.append('file', file, 'encrypted_data.txt');\n          const response = await axios.post('http://localhost:5000/api/decrypt', formData, {\n            headers: { 'Content-Type': 'multipart/form-data' },\n          });\n          const { decrypted, signature_valid } = response.data;\n          setDecryptedText(`Decrypted: ${decrypted}, Signature Valid: ${signature_valid}`);\n          setError('');\n        } catch (error) {\n          console.error('Error decrypting:', error.response ? error.response.data : error.message);\n          setError(`Ошибка дешифрования. Детали: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n        }\n      };\n      reader.readAsText(decryptFile);\n    } else {\n      [encryptedSessionKey, encryptedTextPart] = result.split('||');\n      if (!encryptedSessionKey || !encryptedTextPart) {\n        setError('Некорректный формат зашифрованного текста');\n        return;\n      }\n      try {\n        const response = await axios.post('http://localhost:5000/api/decrypt', {\n          encrypted_text: encryptedTextPart,\n          encrypted_session_key: encryptedSessionKey,\n          signature: signature,\n          digest: digest,\n        }, {\n          headers: { 'Content-Type': 'application/json' },\n        });\n        const { decrypted, signature_valid } = response.data;\n        setDecryptedText(`Decrypted: ${decrypted}, Signature Valid: ${signature_valid}`);\n        setError('');\n      } catch (error) {\n        console.error('Error decrypting:', error.response ? error.response.data : error.message);\n        setError(`Ошибка дешифрования. Детали: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n      }\n    }\n  };\n\n  const exportKey = (key, keyType) => {\n    const blob = new Blob([key], { type: 'text/plain' });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `${keyType}_key.pem`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n\n  const copyToClipboard = (key) => {\n    navigator.clipboard.writeText(key).then(() => {\n      alert('Copied to clipboard!');\n    }).catch(err => {\n      setError(`Failed to copy: ${err.message}`);\n    });\n  };\n\n  const exportDigest = () => {\n    const blob = new Blob([digest], { type: 'text/plain' });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'digest.txt';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n\n  const copyDigestToClipboard = () => {\n    navigator.clipboard.writeText(digest).then(() => {\n      alert('Digest copied to clipboard!');\n    }).catch(err => {\n      setError(`Failed to copy digest: ${err.message}`);\n    });\n  };\n\n  const handleImportKey = (event, keyType) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const keyContent = e.target.result;\n        try {\n          if (keyType === 'public' && !keyContent.includes('-----BEGIN RSA PUBLIC KEY-----')) {\n            throw new Error('Неверный формат публичного ключа');\n          }\n          if (keyType === 'private' && !keyContent.includes('-----BEGIN RSA PRIVATE KEY-----')) {\n            throw new Error('Неверный формат приватного ключа');\n          }\n          if (keyType === 'public') {\n            setPublicKey(keyContent);\n          } else if (keyType === 'private') {\n            setPrivateKey(keyContent);\n          }\n          setError('');\n        } catch (err) {\n          setError(`Ошибка импорта: ${err.message}`);\n        }\n      };\n      reader.readAsText(file);\n      event.target.value = '';\n    }\n  };\n\n  const exportResults = () => {\n    const results = {\n      digest,\n      hash,\n      signature,\n      encryptedSessionKey,\n      encryptedText,\n      result,\n    };\n    const blob = new Blob([JSON.stringify(results, null, 2)], { type: 'application/json' });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'crypto_results.json';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n\n  const handleEncryptFileChange = (event) => {\n    setEncryptFile(event.target.files[0]);\n  };\n\n  const handleDecryptFileChange = (event) => {\n    setDecryptFile(event.target.files[0]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Crypto App</h1>\n\n      <div className=\"keys-section\">\n        <h3>Keys</h3>\n        <p>\n          <strong>Public Key:</strong> {showFullPublicKey ? publicKey : `${publicKey.substring(0, 50)}...`}\n          <button className=\"show-full-btn\" onClick={() => setShowFullPublicKey(!showFullPublicKey)}>\n            {showFullPublicKey ? 'Скрыть' : 'Показать полностью'}\n          </button>\n        </p>\n        <button onClick={() => exportKey(publicKey, 'public')} style={{ marginRight: '10px' }}>\n          Export Public Key\n        </button>\n        <button onClick={() => copyToClipboard(publicKey)} style={{ marginRight: '10px' }}>\n          Copy Public Key\n        </button>\n        <label>\n          Import Public Key\n          <input type=\"file\" onChange={(e) => handleImportKey(e, 'public')} accept=\".pem\" />\n        </label>\n        <p>\n          <strong>Private Key:</strong> {showFullPrivateKey ? privateKey : `${privateKey.substring(0, 50)}...`}\n          <button className=\"show-full-btn\" onClick={() => setShowFullPrivateKey(!showFullPrivateKey)}>\n            {showFullPrivateKey ? 'Скрыть' : 'Показать полностью'}\n          </button>\n        </p>\n        <button onClick={() => exportKey(privateKey, 'private')} style={{ marginRight: '10px' }}>\n          Export Private Key\n        </button>\n        <button onClick={() => copyToClipboard(privateKey)} style={{ marginRight: '10px' }}>\n          Copy Private Key\n        </button>\n        <label>\n          Import Private Key\n          <input type=\"file\" onChange={(e) => handleImportKey(e, 'private')} accept=\".pem\" />\n        </label>\n        {error && <p className=\"error\"><strong>Error:</strong> {error}</p>}\n      </div>\n\n      <div className=\"encrypt-section\">\n        <h3>Encrypt</h3>\n        <input\n          type=\"text\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          placeholder=\"Enter text to encrypt\"\n        />\n        <label>\n          or Upload File\n          <input type=\"file\" onChange={handleEncryptFileChange} accept=\".txt\" />\n        </label>\n        <button onClick={handleEncrypt}>Encrypt</button>\n        <p><strong>Digest:</strong> {digest}</p>\n        <p><strong>Hash:</strong> {hash}</p>\n        <p><strong>Signature:</strong> {signature}</p>\n        <p><strong>Encrypted Session Key:</strong> {encryptedSessionKey}</p>\n        <p><strong>Encrypted Text:</strong> {encryptedText}</p>\n        <button onClick={exportDigest} style={{ marginRight: '10px' }}>\n          Export Digest\n        </button>\n        <button onClick={copyDigestToClipboard} style={{ marginRight: '10px' }}>\n          Copy Digest\n        </button>\n        <button onClick={exportResults}>\n          Export All Results\n        </button>\n      </div>\n\n      <div className=\"decrypt-section\">\n        <h3>Decrypt</h3>\n        <p><strong>Encrypted Text:</strong> {encryptedText}</p>\n        <input\n          type=\"text\"\n          value={encryptedText}\n          onChange={(e) => setEncryptedText(e.target.value)}\n          placeholder=\"Enter encrypted text\"\n        />\n        <label>\n          or Upload Encrypted File\n          <input type=\"file\" onChange={handleDecryptFileChange} accept=\".txt\" />\n        </label>\n        <button onClick={handleDecrypt}>Decrypt</button>\n      </div>\n\n      <div className=\"result-section\">\n        <p><strong>Decrypted Text:</strong> {decryptedText}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}