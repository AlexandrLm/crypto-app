{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alex\\\\Desktop\\\\crypto-app\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState('');\n  const [encryptedText, setEncryptedText] = useState('');\n  const [encryptedSessionKey, setEncryptedSessionKey] = useState('');\n  const [result, setResult] = useState('');\n  const [publicKey, setPublicKey] = useState('');\n  const [privateKey, setPrivateKey] = useState('');\n  const [error, setError] = useState('');\n  const [showFullPublicKey, setShowFullPublicKey] = useState(false);\n  const [showFullPrivateKey, setShowFullPrivateKey] = useState(false);\n  const [digest, setDigest] = useState('');\n  const [hash, setHash] = useState('');\n  const [signature, setSignature] = useState('');\n  const [otherPublicKeys, setOtherPublicKeys] = useState({});\n  const [selectedOtherKeyId, setSelectedOtherKeyId] = useState(null);\n  const [importType, setImportType] = useState('own'); // 'own' для собственного ключа, 'other' для ключа другого пользователя\n  const API_URL = 'http://192.168.1.146:5000';\n  useEffect(() => {\n    const fetchKeys = async () => {\n      try {\n        const response = await axios.get(API_URL + '/api/generate-keys', {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log('Keys response:', response.data);\n        setPublicKey(response.data.rsa_public_key);\n        setPrivateKey(response.data.rsa_private_key);\n        setError('');\n      } catch (error) {\n        console.error('Error fetching keys:', error.response ? error.response.data : error.message);\n        setError(`Failed to load keys. Details: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n      }\n    };\n    fetchKeys();\n  }, []);\n  const generateDigest = text => {\n    if (!text) return '';\n    return text.split(' ').map(word => {\n      let result = '';\n      for (let i = 2; i < word.length; i += 3) {\n        result += word[i] || '';\n      }\n      return result;\n    }).join('');\n  };\n  const handleEncrypt = async () => {\n    if (!publicKey || !privateKey) {\n      setError('Ключи не сгенерированы. Пожалуйста, подождите...');\n      return;\n    }\n    const calculatedDigest = generateDigest(text);\n    setDigest(calculatedDigest);\n    try {\n      const hashResponse = await axios.post(API_URL + '/api/hash', {\n        digest: calculatedDigest\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const {\n        hash: computedHash\n      } = hashResponse.data;\n      setHash(computedHash);\n      console.log(`Hash: ${computedHash}`);\n      const signResponse = await axios.post(API_URL + '/api/sign', {\n        hash: computedHash\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const {\n        signature: computedSignature\n      } = signResponse.data;\n      setSignature(computedSignature);\n      console.log(`Signature: ${computedSignature}`);\n      const encryptResponse = await axios.post(API_URL + '/api/encrypt', {\n        text: text,\n        digest: calculatedDigest\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const {\n        encrypted_text,\n        encrypted_session_key,\n        signature\n      } = encryptResponse.data;\n      const fullEncryptedText = `${encrypted_session_key}||${encrypted_text}`;\n      setEncryptedText(fullEncryptedText);\n      setEncryptedSessionKey(encrypted_session_key);\n      setResult(fullEncryptedText);\n      setError('');\n    } catch (error) {\n      console.error('Error:', error.response ? error.response.data : error.message);\n      setError(`Ошибка. Детали: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n    }\n  };\n  const handleDecrypt = async () => {\n    if (!encryptedText) {\n      setError('Введите зашифрованный текст');\n      return;\n    }\n    const [encryptedSessionKey, encryptedTextPart] = encryptedText.split('||');\n    if (!encryptedSessionKey || !encryptedTextPart) {\n      setError('Некорректный формат зашифрованного текста. Ожидается: <session_key>||<encrypted_text>');\n      return;\n    }\n    try {\n      const response = await axios.post(API_URL + '/api/decrypt', {\n        encrypted_text: encryptedTextPart,\n        encrypted_session_key: encryptedSessionKey,\n        signature: signature,\n        digest: digest,\n        other_public_key: selectedOtherKeyId ? otherPublicKeys[selectedOtherKeyId] : null\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const {\n        decrypted,\n        signature_valid\n      } = response.data;\n      setResult(`Decrypted: ${decrypted}, Signature Valid: ${signature_valid}`);\n      setError('');\n    } catch (error) {\n      console.error('Error decrypting:', error.response ? error.response.data : error.message);\n      setError(`Ошибка дешифрования. Детали: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n    }\n  };\n  const exportKey = (key, keyType) => {\n    const blob = new Blob([key], {\n      type: 'text/plain'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `${keyType}_key.pem`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n  const copyToClipboard = key => {\n    navigator.clipboard.writeText(key).then(() => {\n      alert('Copied to clipboard!');\n    }).catch(err => {\n      setError(`Failed to copy: ${err.message}`);\n    });\n  };\n  const exportDigest = () => {\n    const blob = new Blob([digest], {\n      type: 'text/plain'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'digest.txt';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n  const copyDigestToClipboard = () => {\n    navigator.clipboard.writeText(digest).then(() => {\n      alert('Digest copied to clipboard!');\n    }).catch(err => {\n      setError(`Failed to copy digest: ${err.message}`);\n    });\n  };\n  const handleImportKey = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const keyContent = e.target.result;\n        try {\n          if (!keyContent.includes('-----BEGIN PUBLIC KEY-----') && !keyContent.includes('-----BEGIN PRIVATE KEY-----')) {\n            throw new Error('Неверный формат ключа. Ожидается RSA в формате PEM.');\n          }\n          // Если публичный ключ еще не задан, считаем это собственным ключом\n          if (keyContent.includes('-----BEGIN PUBLIC KEY-----') && !publicKey) {\n            setPublicKey(keyContent);\n          } else if (keyContent.includes('-----BEGIN PRIVATE KEY-----') && !privateKey) {\n            setPrivateKey(keyContent);\n          } else {\n            // Если собственные ключи уже есть, добавляем как ключ другого пользователя\n            const newId = Date.now().toString();\n            setOtherPublicKeys({\n              ...otherPublicKeys,\n              [newId]: keyContent\n            });\n          }\n          setError('');\n        } catch (err) {\n          setError(`Ошибка импорта: ${err.message}`);\n        }\n      };\n      reader.readAsText(file);\n      event.target.value = '';\n    }\n  };\n  const exportResults = () => {\n    const results = {\n      digest,\n      hash,\n      signature,\n      encryptedSessionKey,\n      encryptedText,\n      result\n    };\n    const blob = new Blob([JSON.stringify(results, null, 2)], {\n      type: 'application/json'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'crypto_results.json';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Crypto App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keys-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Keys\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          borderBottom: '1px solid #ccc',\n          paddingBottom: '10px',\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Your Keys\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Public Key:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), \" \", showFullPublicKey ? publicKey : `${publicKey.substring(0, 50)}...`, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"show-full-btn\",\n            onClick: () => setShowFullPublicKey(!showFullPublicKey),\n            style: {\n              marginLeft: '10px',\n              padding: '4px 8px'\n            },\n            children: showFullPublicKey ? 'Скрыть' : 'Показать полностью'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => exportKey(publicKey, 'public'),\n          style: {\n            marginRight: '10px'\n          },\n          children: \"Export Public Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => copyToClipboard(publicKey),\n          style: {\n            marginRight: '10px'\n          },\n          children: \"Copy Public Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Private Key:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), \" \", showFullPrivateKey ? privateKey : `${privateKey.substring(0, 50)}...`, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"show-full-btn\",\n            onClick: () => setShowFullPrivateKey(!showFullPrivateKey),\n            style: {\n              marginLeft: '10px',\n              padding: '4px 8px'\n            },\n            children: showFullPrivateKey ? 'Скрыть' : 'Показать полностью'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => exportKey(privateKey, 'private'),\n          style: {\n            marginRight: '10px'\n          },\n          children: \"Export Private Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => copyToClipboard(privateKey),\n          style: {\n            marginRight: '10px'\n          },\n          children: \"Copy Private Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          borderBottom: '1px solid #ccc',\n          paddingBottom: '10px',\n          marginBottom: '10px',\n          marginRight: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Import Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: handleImportKey,\n            accept: \".pem\",\n            style: {\n              marginRight: '20px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), \"Import Key\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"custom-select\",\n          value: selectedOtherKeyId || '',\n          onChange: e => setSelectedOtherKeyId(e.target.value),\n          style: {\n            width: '50%',\n            padding: '8px',\n            marginBottom: '10px',\n            marginTop: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Your key\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), Object.entries(otherPublicKeys).map(([id, key], index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: id,\n            children: [\"Key \", index + 1, \" (Preview: \", key.substring(0, 20), \"...)\"]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Error:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 40\n        }, this), \" \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"encrypt-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Encrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Enter text to encrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEncrypt,\n        children: \"Encrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Digest:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 12\n        }, this), \" \", digest]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Hash:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 12\n        }, this), \" \", hash]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Signature:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 12\n        }, this), \" \", signature]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Encrypted Session Key:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 12\n        }, this), \" \", encryptedSessionKey]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Encrypted Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 12\n        }, this), \" \", encryptedText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportDigest,\n        style: {\n          marginRight: '10px'\n        },\n        children: \"Export Digest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: copyDigestToClipboard,\n        style: {\n          marginRight: '10px'\n        },\n        children: \"Copy Digest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportResults,\n        children: \"Export All Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"decrypt-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Decrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: encryptedText,\n        onChange: e => setEncryptedText(e.target.value),\n        placeholder: \"Enter encrypted text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDecrypt,\n        children: \"Decrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-section\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Result:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 12\n        }, this), \" \", result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FLLySROWODQ67iYbSGJw7Bz2CFc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","text","setText","encryptedText","setEncryptedText","encryptedSessionKey","setEncryptedSessionKey","result","setResult","publicKey","setPublicKey","privateKey","setPrivateKey","error","setError","showFullPublicKey","setShowFullPublicKey","showFullPrivateKey","setShowFullPrivateKey","digest","setDigest","hash","setHash","signature","setSignature","otherPublicKeys","setOtherPublicKeys","selectedOtherKeyId","setSelectedOtherKeyId","importType","setImportType","API_URL","fetchKeys","response","get","headers","console","log","data","rsa_public_key","rsa_private_key","message","JSON","stringify","generateDigest","split","map","word","i","length","join","handleEncrypt","calculatedDigest","hashResponse","post","computedHash","signResponse","computedSignature","encryptResponse","encrypted_text","encrypted_session_key","fullEncryptedText","handleDecrypt","encryptedTextPart","other_public_key","decrypted","signature_valid","exportKey","key","keyType","blob","Blob","type","url","window","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","copyToClipboard","navigator","clipboard","writeText","then","alert","catch","err","exportDigest","copyDigestToClipboard","handleImportKey","event","file","target","files","reader","FileReader","onload","e","keyContent","includes","Error","newId","Date","now","toString","readAsText","value","exportResults","results","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","borderBottom","paddingBottom","marginBottom","substring","onClick","marginLeft","padding","marginRight","onChange","accept","width","marginTop","Object","entries","id","index","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/alex/Desktop/crypto-app/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [text, setText] = useState('');\n  const [encryptedText, setEncryptedText] = useState('');\n  const [encryptedSessionKey, setEncryptedSessionKey] = useState('');\n  const [result, setResult] = useState('');\n  const [publicKey, setPublicKey] = useState('');\n  const [privateKey, setPrivateKey] = useState('');\n  const [error, setError] = useState('');\n  const [showFullPublicKey, setShowFullPublicKey] = useState(false);\n  const [showFullPrivateKey, setShowFullPrivateKey] = useState(false);\n  const [digest, setDigest] = useState('');\n  const [hash, setHash] = useState('');\n  const [signature, setSignature] = useState('');\n  const [otherPublicKeys, setOtherPublicKeys] = useState({});\n  const [selectedOtherKeyId, setSelectedOtherKeyId] = useState(null);\n  const [importType, setImportType] = useState('own'); // 'own' для собственного ключа, 'other' для ключа другого пользователя\n  const API_URL = 'http://192.168.1.146:5000';\n\n  useEffect(() => {\n    const fetchKeys = async () => {\n      try {\n        const response = await axios.get(API_URL+'/api/generate-keys', {\n          headers: { 'Content-Type': 'application/json' },\n        });\n        console.log('Keys response:', response.data);\n        setPublicKey(response.data.rsa_public_key);\n        setPrivateKey(response.data.rsa_private_key);\n        setError('');\n      } catch (error) {\n        console.error('Error fetching keys:', error.response ? error.response.data : error.message);\n        setError(`Failed to load keys. Details: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n      }\n    };\n    fetchKeys();\n  }, []);\n\n  const generateDigest = (text) => {\n    if (!text) return '';\n    return text\n      .split(' ')\n      .map(word => {\n        let result = '';\n        for (let i = 2; i < word.length; i += 3) {\n          result += word[i] || '';\n        }\n        return result;\n      })\n      .join('');\n  };\n\n  const handleEncrypt = async () => {\n    if (!publicKey || !privateKey) {\n      setError('Ключи не сгенерированы. Пожалуйста, подождите...');\n      return;\n    }\n    const calculatedDigest = generateDigest(text);\n    setDigest(calculatedDigest);\n    try {\n      const hashResponse = await axios.post(\n        API_URL+'/api/hash',\n        { digest: calculatedDigest },\n        { headers: { 'Content-Type': 'application/json' } }\n      );\n      const { hash: computedHash } = hashResponse.data;\n      setHash(computedHash);\n      console.log(`Hash: ${computedHash}`);\n\n      const signResponse = await axios.post(\n        API_URL+'/api/sign',\n        { hash: computedHash },\n        { headers: { 'Content-Type': 'application/json' } }\n      );\n      const { signature: computedSignature } = signResponse.data;\n      setSignature(computedSignature);\n      console.log(`Signature: ${computedSignature}`);\n\n      const encryptResponse = await axios.post(\n        API_URL+'/api/encrypt',\n        { text: text, digest: calculatedDigest },\n        { headers: { 'Content-Type': 'application/json' } }\n      );\n      const { encrypted_text, encrypted_session_key, signature } = encryptResponse.data;\n      const fullEncryptedText = `${encrypted_session_key}||${encrypted_text}`;\n      setEncryptedText(fullEncryptedText);\n      setEncryptedSessionKey(encrypted_session_key);\n      setResult(fullEncryptedText);\n      setError('');\n    } catch (error) {\n      console.error('Error:', error.response ? error.response.data : error.message);\n      setError(`Ошибка. Детали: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n    }\n  };\n\n  const handleDecrypt = async () => {\n    if (!encryptedText) {\n      setError('Введите зашифрованный текст');\n      return;\n    }\n    const [encryptedSessionKey, encryptedTextPart] = encryptedText.split('||');\n    if (!encryptedSessionKey || !encryptedTextPart) {\n      setError('Некорректный формат зашифрованного текста. Ожидается: <session_key>||<encrypted_text>');\n      return;\n    }\n    try {\n      const response = await axios.post(\n        API_URL+'/api/decrypt',\n        {\n          encrypted_text: encryptedTextPart,\n          encrypted_session_key: encryptedSessionKey,\n          signature: signature,\n          digest: digest,\n          other_public_key: selectedOtherKeyId ? otherPublicKeys[selectedOtherKeyId] : null,\n        },\n        { headers: { 'Content-Type': 'application/json' } }\n      );\n      const { decrypted, signature_valid } = response.data;\n      setResult(`Decrypted: ${decrypted}, Signature Valid: ${signature_valid}`);\n      setError('');\n    } catch (error) {\n      console.error('Error decrypting:', error.response ? error.response.data : error.message);\n      setError(`Ошибка дешифрования. Детали: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n    }\n  };\n\n  const exportKey = (key, keyType) => {\n    const blob = new Blob([key], { type: 'text/plain' });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `${keyType}_key.pem`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n\n  const copyToClipboard = (key) => {\n    navigator.clipboard.writeText(key).then(() => {\n      alert('Copied to clipboard!');\n    }).catch(err => {\n      setError(`Failed to copy: ${err.message}`);\n    });\n  };\n\n  const exportDigest = () => {\n    const blob = new Blob([digest], { type: 'text/plain' });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'digest.txt';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n\n  const copyDigestToClipboard = () => {\n    navigator.clipboard.writeText(digest).then(() => {\n      alert('Digest copied to clipboard!');\n    }).catch(err => {\n      setError(`Failed to copy digest: ${err.message}`);\n    });\n  };\n\n  const handleImportKey = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const keyContent = e.target.result;\n        try {\n          if (!keyContent.includes('-----BEGIN PUBLIC KEY-----') && !keyContent.includes('-----BEGIN PRIVATE KEY-----')) {\n            throw new Error('Неверный формат ключа. Ожидается RSA в формате PEM.');\n          }\n          // Если публичный ключ еще не задан, считаем это собственным ключом\n          if (keyContent.includes('-----BEGIN PUBLIC KEY-----') && !publicKey) {\n            setPublicKey(keyContent);\n          } else if (keyContent.includes('-----BEGIN PRIVATE KEY-----') && !privateKey) {\n            setPrivateKey(keyContent);\n          } else {\n            // Если собственные ключи уже есть, добавляем как ключ другого пользователя\n            const newId = Date.now().toString();\n            setOtherPublicKeys({ ...otherPublicKeys, [newId]: keyContent });\n          }\n          setError('');\n        } catch (err) {\n          setError(`Ошибка импорта: ${err.message}`);\n        }\n      };\n      reader.readAsText(file);\n      event.target.value = '';\n    }\n  };\n\n  const exportResults = () => {\n    const results = {\n      digest,\n      hash,\n      signature,\n      encryptedSessionKey,\n      encryptedText,\n      result,\n    };\n    const blob = new Blob([JSON.stringify(results, null, 2)], { type: 'application/json' });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'crypto_results.json';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Crypto App</h1>\n\n      <div className=\"keys-section\">\n        <h3>Keys</h3>\n        <div style={{ borderBottom: '1px solid #ccc', paddingBottom: '10px', marginBottom: '10px' }}>\n          <h4>Your Keys</h4>\n          <p>\n            <strong>Public Key:</strong> {showFullPublicKey ? publicKey : `${publicKey.substring(0, 50)}...`}\n            <button\n              className=\"show-full-btn\"\n              onClick={() => setShowFullPublicKey(!showFullPublicKey)}\n              style={{ marginLeft: '10px', padding: '4px 8px' }}\n            >\n              {showFullPublicKey ? 'Скрыть' : 'Показать полностью'}\n            </button>\n          </p>\n          <button onClick={() => exportKey(publicKey, 'public')} style={{ marginRight: '10px' }}>\n            Export Public Key\n          </button>\n          <button onClick={() => copyToClipboard(publicKey)} style={{ marginRight: '10px' }}>\n            Copy Public Key\n          </button>\n\n          <p>\n            <strong>Private Key:</strong> {showFullPrivateKey ? privateKey : `${privateKey.substring(0, 50)}...`}\n            <button\n              className=\"show-full-btn\"\n              onClick={() => setShowFullPrivateKey(!showFullPrivateKey)}\n              style={{ marginLeft: '10px', padding: '4px 8px' }}\n            >\n              {showFullPrivateKey ? 'Скрыть' : 'Показать полностью'}\n            </button>\n          </p>\n          <button onClick={() => exportKey(privateKey, 'private')} style={{ marginRight: '10px' }}>\n            Export Private Key\n          </button>\n          <button onClick={() => copyToClipboard(privateKey)} style={{ marginRight: '10px' }}>\n            Copy Private Key\n          </button>\n        </div>\n\n        <div style={{ borderBottom: '1px solid #ccc', paddingBottom: '10px', marginBottom: '10px', marginRight: '20px' }}>\n          <h4>Import Key</h4>\n          <label>\n            <input type=\"file\" onChange={handleImportKey} accept=\".pem\" style={{ marginRight: '20px' }}/>\n              Import Key\n          </label>\n\n          <select\n            className=\"custom-select\"\n            value={selectedOtherKeyId || ''}\n            onChange={(e) => setSelectedOtherKeyId(e.target.value)}\n            style={{ width: '50%', padding: '8px', marginBottom: '10px', marginTop: '10px' }}\n          >\n            <option value=\"\">Your key</option>\n            {Object.entries(otherPublicKeys).map(([id, key], index) => (\n              <option key={id} value={id}>\n                Key {index + 1} (Preview: {key.substring(0, 20)}...)\n              </option>\n            ))}\n          </select>\n        </div>\n        {error && <p className=\"error\"><strong>Error:</strong> {error}</p>}\n      </div>\n\n      <div className=\"encrypt-section\">\n        <h3>Encrypt</h3>\n        <input\n          type=\"text\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          placeholder=\"Enter text to encrypt\"\n        />\n        <button onClick={handleEncrypt}>Encrypt</button>\n        <p><strong>Digest:</strong> {digest}</p>\n        <p><strong>Hash:</strong> {hash}</p>\n        <p><strong>Signature:</strong> {signature}</p>\n        <p><strong>Encrypted Session Key:</strong> {encryptedSessionKey}</p>\n        <p><strong>Encrypted Text:</strong> {encryptedText}</p>\n        <button onClick={exportDigest} style={{ marginRight: '10px' }}>\n          Export Digest\n        </button>\n        <button onClick={copyDigestToClipboard} style={{ marginRight: '10px' }}>\n          Copy Digest\n        </button>\n        <button onClick={exportResults}>\n          Export All Results\n        </button>\n      </div>\n\n      <div className=\"decrypt-section\">\n        <h3>Decrypt</h3>\n        <input\n          type=\"text\"\n          value={encryptedText}\n          onChange={(e) => setEncryptedText(e.target.value)}\n          placeholder=\"Enter encrypted text\"\n        />\n        <button onClick={handleDecrypt}>Decrypt</button>\n      </div>\n\n      <div className=\"result-section\">\n        <p><strong>Result:</strong> {result}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}