{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alex\\\\Desktop\\\\crypto-app\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState('');\n  const [encryptedText, setEncryptedText] = useState('');\n  const [encryptedSessionKey, setEncryptedSessionKey] = useState('');\n  const [result, setResult] = useState('');\n  const [publicKey, setPublicKey] = useState('');\n  const [privateKey, setPrivateKey] = useState('');\n  const [error, setError] = useState('');\n  const [showFullPublicKey, setShowFullPublicKey] = useState(false);\n  const [showFullPrivateKey, setShowFullPrivateKey] = useState(false);\n  const [digest, setDigest] = useState('');\n  const [hash, setHash] = useState('');\n  const [signature, setSignature] = useState('');\n  const [otherPublicKeys, setOtherPublicKeys] = useState({});\n  const [selectedOtherKeyId, setSelectedOtherKeyId] = useState(null);\n  const [importType, setImportType] = useState('own'); // 'own' для собственного ключа, 'other' для ключа другого пользователя\n\n  useEffect(() => {\n    const fetchKeys = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/generate-keys', {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log('Keys response:', response.data);\n        setPublicKey(response.data.rsa_public_key);\n        setPrivateKey(response.data.rsa_private_key);\n        setError('');\n      } catch (error) {\n        console.error('Error fetching keys:', error.response ? error.response.data : error.message);\n        setError(`Failed to load keys. Details: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n      }\n    };\n    fetchKeys();\n  }, []);\n  const generateDigest = text => {\n    if (!text) return '';\n    return text.split(' ').map(word => {\n      let result = '';\n      for (let i = 2; i < word.length; i += 3) {\n        result += word[i] || '';\n      }\n      return result;\n    }).join('');\n  };\n  const handleEncrypt = async () => {\n    if (!publicKey || !privateKey) {\n      setError('Ключи не сгенерированы. Пожалуйста, подождите...');\n      return;\n    }\n    const calculatedDigest = generateDigest(text);\n    setDigest(calculatedDigest);\n    try {\n      const hashResponse = await axios.post('http://localhost:5000/api/hash', {\n        digest: calculatedDigest\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const {\n        hash: computedHash\n      } = hashResponse.data;\n      setHash(computedHash);\n      console.log(`Hash: ${computedHash}`);\n      const signResponse = await axios.post('http://localhost:5000/api/sign', {\n        hash: computedHash\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const {\n        signature: computedSignature\n      } = signResponse.data;\n      setSignature(computedSignature);\n      console.log(`Signature: ${computedSignature}`);\n      const encryptResponse = await axios.post('http://localhost:5000/api/encrypt', {\n        text: text,\n        digest: calculatedDigest\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const {\n        encrypted_text,\n        encrypted_session_key,\n        signature\n      } = encryptResponse.data;\n      const fullEncryptedText = `${encrypted_session_key}||${encrypted_text}`;\n      setEncryptedText(fullEncryptedText);\n      setEncryptedSessionKey(encrypted_session_key);\n      setResult(fullEncryptedText);\n      setError('');\n    } catch (error) {\n      console.error('Error:', error.response ? error.response.data : error.message);\n      setError(`Ошибка. Детали: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n    }\n  };\n  const handleDecrypt = async () => {\n    if (!encryptedText) {\n      setError('Введите зашифрованный текст');\n      return;\n    }\n    const [encryptedSessionKey, encryptedTextPart] = encryptedText.split('||');\n    if (!encryptedSessionKey || !encryptedTextPart) {\n      setError('Некорректный формат зашифрованного текста. Ожидается: <session_key>||<encrypted_text>');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/decrypt', {\n        encrypted_text: encryptedTextPart,\n        encrypted_session_key: encryptedSessionKey,\n        signature: signature,\n        digest: digest,\n        other_public_key: selectedOtherKeyId ? otherPublicKeys[selectedOtherKeyId] : null\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const {\n        decrypted,\n        signature_valid\n      } = response.data;\n      setResult(`Decrypted: ${decrypted}, Signature Valid: ${signature_valid}`);\n      setError('');\n    } catch (error) {\n      console.error('Error decrypting:', error.response ? error.response.data : error.message);\n      setError(`Ошибка дешифрования. Детали: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n    }\n  };\n  const exportKey = (key, keyType) => {\n    const blob = new Blob([key], {\n      type: 'text/plain'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `${keyType}_key.pem`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n  const copyToClipboard = key => {\n    navigator.clipboard.writeText(key).then(() => {\n      alert('Copied to clipboard!');\n    }).catch(err => {\n      setError(`Failed to copy: ${err.message}`);\n    });\n  };\n  const exportDigest = () => {\n    const blob = new Blob([digest], {\n      type: 'text/plain'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'digest.txt';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n  const copyDigestToClipboard = () => {\n    navigator.clipboard.writeText(digest).then(() => {\n      alert('Digest copied to clipboard!');\n    }).catch(err => {\n      setError(`Failed to copy digest: ${err.message}`);\n    });\n  };\n  const handleImportKey = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const keyContent = e.target.result;\n        try {\n          if (!keyContent.includes('-----BEGIN PUBLIC KEY-----') && !keyContent.includes('-----BEGIN PRIVATE KEY-----')) {\n            throw new Error('Неверный формат ключа');\n          }\n          if (importType === 'own') {\n            if (keyContent.includes('-----BEGIN PUBLIC KEY-----')) {\n              setPublicKey(keyContent);\n            } else if (keyContent.includes('-----BEGIN PRIVATE KEY-----')) {\n              setPrivateKey(keyContent);\n            }\n          } else if (importType === 'other') {\n            const newId = Date.now().toString();\n            setOtherPublicKeys({\n              ...otherPublicKeys,\n              [newId]: keyContent\n            });\n          }\n          setError('');\n        } catch (err) {\n          setError(`Ошибка импорта: ${err.message}`);\n        }\n      };\n      reader.readAsText(file);\n      event.target.value = '';\n    }\n  };\n  const exportResults = () => {\n    const results = {\n      digest,\n      hash,\n      signature,\n      encryptedSessionKey,\n      encryptedText,\n      result\n    };\n    const blob = new Blob([JSON.stringify(results, null, 2)], {\n      type: 'application/json'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'crypto_results.json';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Crypto App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keys-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Keys\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          borderBottom: '1px solid #ccc',\n          paddingBottom: '10px',\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Your Keys\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Public Key:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), \" \", showFullPublicKey ? publicKey : `${publicKey.substring(0, 50)}...`, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"show-full-btn\",\n            onClick: () => setShowFullPublicKey(!showFullPublicKey),\n            style: {\n              marginLeft: '10px',\n              padding: '4px 8px'\n            },\n            children: showFullPublicKey ? 'Скрыть' : 'Показать полностью'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => exportKey(publicKey, 'public'),\n          style: {\n            marginRight: '10px'\n          },\n          children: \"Export Public Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => copyToClipboard(publicKey),\n          style: {\n            marginRight: '10px'\n          },\n          children: \"Copy Public Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Private Key:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), \" \", showFullPrivateKey ? privateKey : `${privateKey.substring(0, 50)}...`, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"show-full-btn\",\n            onClick: () => setShowFullPrivateKey(!showFullPrivateKey),\n            style: {\n              marginLeft: '10px',\n              padding: '4px 8px'\n            },\n            children: showFullPrivateKey ? 'Скрыть' : 'Показать полностью'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => exportKey(privateKey, 'private'),\n          style: {\n            marginRight: '10px'\n          },\n          children: \"Export Private Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => copyToClipboard(privateKey),\n          style: {\n            marginRight: '10px'\n          },\n          children: \"Copy Private Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          borderBottom: '1px solid #ccc',\n          paddingBottom: '10px',\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Import Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Import Key Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"custom-select\",\n            value: importType,\n            onChange: e => setImportType(e.target.value),\n            style: {\n              marginLeft: '10px',\n              padding: '4px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"own\",\n              children: \"Your Key\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"other\",\n              children: \"Other User's Key\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            marginLeft: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: handleImportKey,\n            accept: \".pem\",\n            style: {\n              marginLeft: '5px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), \"Import Key\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Other Users' Public Keys\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedOtherKeyId || '',\n          className: \"custom-select\",\n          onChange: e => setSelectedOtherKeyId(e.target.value),\n          style: {\n            width: '100%',\n            padding: '8px',\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a key\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), Object.entries(otherPublicKeys).map(([id, key], index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: id,\n            children: [\"Key \", index + 1, \" (Preview: \", key.substring(27, 40), \"...)\"]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Error:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 40\n        }, this), \" \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"encrypt-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Encrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Enter text to encrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEncrypt,\n        children: \"Encrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Digest:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 12\n        }, this), \" \", digest]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Hash:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 12\n        }, this), \" \", hash]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Signature:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 12\n        }, this), \" \", signature]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Encrypted Session Key:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 12\n        }, this), \" \", encryptedSessionKey]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Encrypted Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 12\n        }, this), \" \", encryptedText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportDigest,\n        style: {\n          marginRight: '10px'\n        },\n        children: \"Export Digest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: copyDigestToClipboard,\n        style: {\n          marginRight: '10px'\n        },\n        children: \"Copy Digest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportResults,\n        children: \"Export All Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"decrypt-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Decrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: encryptedText,\n        onChange: e => setEncryptedText(e.target.value),\n        placeholder: \"Enter encrypted text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDecrypt,\n        children: \"Decrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-section\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Result:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 12\n        }, this), \" \", result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FLLySROWODQ67iYbSGJw7Bz2CFc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","text","setText","encryptedText","setEncryptedText","encryptedSessionKey","setEncryptedSessionKey","result","setResult","publicKey","setPublicKey","privateKey","setPrivateKey","error","setError","showFullPublicKey","setShowFullPublicKey","showFullPrivateKey","setShowFullPrivateKey","digest","setDigest","hash","setHash","signature","setSignature","otherPublicKeys","setOtherPublicKeys","selectedOtherKeyId","setSelectedOtherKeyId","importType","setImportType","fetchKeys","response","get","headers","console","log","data","rsa_public_key","rsa_private_key","message","JSON","stringify","generateDigest","split","map","word","i","length","join","handleEncrypt","calculatedDigest","hashResponse","post","computedHash","signResponse","computedSignature","encryptResponse","encrypted_text","encrypted_session_key","fullEncryptedText","handleDecrypt","encryptedTextPart","other_public_key","decrypted","signature_valid","exportKey","key","keyType","blob","Blob","type","url","window","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","copyToClipboard","navigator","clipboard","writeText","then","alert","catch","err","exportDigest","copyDigestToClipboard","handleImportKey","event","file","target","files","reader","FileReader","onload","e","keyContent","includes","Error","newId","Date","now","toString","readAsText","value","exportResults","results","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","borderBottom","paddingBottom","marginBottom","substring","onClick","marginLeft","padding","marginRight","onChange","accept","width","Object","entries","id","index","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/alex/Desktop/crypto-app/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [text, setText] = useState('');\n  const [encryptedText, setEncryptedText] = useState('');\n  const [encryptedSessionKey, setEncryptedSessionKey] = useState('');\n  const [result, setResult] = useState('');\n  const [publicKey, setPublicKey] = useState('');\n  const [privateKey, setPrivateKey] = useState('');\n  const [error, setError] = useState('');\n  const [showFullPublicKey, setShowFullPublicKey] = useState(false);\n  const [showFullPrivateKey, setShowFullPrivateKey] = useState(false);\n  const [digest, setDigest] = useState('');\n  const [hash, setHash] = useState('');\n  const [signature, setSignature] = useState('');\n  const [otherPublicKeys, setOtherPublicKeys] = useState({});\n  const [selectedOtherKeyId, setSelectedOtherKeyId] = useState(null);\n  const [importType, setImportType] = useState('own'); // 'own' для собственного ключа, 'other' для ключа другого пользователя\n\n  useEffect(() => {\n    const fetchKeys = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/generate-keys', {\n          headers: { 'Content-Type': 'application/json' },\n        });\n        console.log('Keys response:', response.data);\n        setPublicKey(response.data.rsa_public_key);\n        setPrivateKey(response.data.rsa_private_key);\n        setError('');\n      } catch (error) {\n        console.error('Error fetching keys:', error.response ? error.response.data : error.message);\n        setError(`Failed to load keys. Details: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n      }\n    };\n    fetchKeys();\n  }, []);\n\n  const generateDigest = (text) => {\n    if (!text) return '';\n    return text\n      .split(' ')\n      .map(word => {\n        let result = '';\n        for (let i = 2; i < word.length; i += 3) {\n          result += word[i] || '';\n        }\n        return result;\n      })\n      .join('');\n  };\n\n  const handleEncrypt = async () => {\n    if (!publicKey || !privateKey) {\n      setError('Ключи не сгенерированы. Пожалуйста, подождите...');\n      return;\n    }\n    const calculatedDigest = generateDigest(text);\n    setDigest(calculatedDigest);\n    try {\n      const hashResponse = await axios.post(\n        'http://localhost:5000/api/hash',\n        { digest: calculatedDigest },\n        { headers: { 'Content-Type': 'application/json' } }\n      );\n      const { hash: computedHash } = hashResponse.data;\n      setHash(computedHash);\n      console.log(`Hash: ${computedHash}`);\n\n      const signResponse = await axios.post(\n        'http://localhost:5000/api/sign',\n        { hash: computedHash },\n        { headers: { 'Content-Type': 'application/json' } }\n      );\n      const { signature: computedSignature } = signResponse.data;\n      setSignature(computedSignature);\n      console.log(`Signature: ${computedSignature}`);\n\n      const encryptResponse = await axios.post(\n        'http://localhost:5000/api/encrypt',\n        { text: text, digest: calculatedDigest },\n        { headers: { 'Content-Type': 'application/json' } }\n      );\n      const { encrypted_text, encrypted_session_key, signature } = encryptResponse.data;\n      const fullEncryptedText = `${encrypted_session_key}||${encrypted_text}`;\n      setEncryptedText(fullEncryptedText);\n      setEncryptedSessionKey(encrypted_session_key);\n      setResult(fullEncryptedText);\n      setError('');\n    } catch (error) {\n      console.error('Error:', error.response ? error.response.data : error.message);\n      setError(`Ошибка. Детали: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n    }\n  };\n\n  const handleDecrypt = async () => {\n    if (!encryptedText) {\n      setError('Введите зашифрованный текст');\n      return;\n    }\n    const [encryptedSessionKey, encryptedTextPart] = encryptedText.split('||');\n    if (!encryptedSessionKey || !encryptedTextPart) {\n      setError('Некорректный формат зашифрованного текста. Ожидается: <session_key>||<encrypted_text>');\n      return;\n    }\n    try {\n      const response = await axios.post(\n        'http://localhost:5000/api/decrypt',\n        {\n          encrypted_text: encryptedTextPart,\n          encrypted_session_key: encryptedSessionKey,\n          signature: signature,\n          digest: digest,\n          other_public_key: selectedOtherKeyId ? otherPublicKeys[selectedOtherKeyId] : null,\n        },\n        { headers: { 'Content-Type': 'application/json' } }\n      );\n      const { decrypted, signature_valid } = response.data;\n      setResult(`Decrypted: ${decrypted}, Signature Valid: ${signature_valid}`);\n      setError('');\n    } catch (error) {\n      console.error('Error decrypting:', error.response ? error.response.data : error.message);\n      setError(`Ошибка дешифрования. Детали: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n    }\n  };\n\n  const exportKey = (key, keyType) => {\n    const blob = new Blob([key], { type: 'text/plain' });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `${keyType}_key.pem`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n\n  const copyToClipboard = (key) => {\n    navigator.clipboard.writeText(key).then(() => {\n      alert('Copied to clipboard!');\n    }).catch(err => {\n      setError(`Failed to copy: ${err.message}`);\n    });\n  };\n\n  const exportDigest = () => {\n    const blob = new Blob([digest], { type: 'text/plain' });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'digest.txt';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n\n  const copyDigestToClipboard = () => {\n    navigator.clipboard.writeText(digest).then(() => {\n      alert('Digest copied to clipboard!');\n    }).catch(err => {\n      setError(`Failed to copy digest: ${err.message}`);\n    });\n  };\n\n  const handleImportKey = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const keyContent = e.target.result;\n        try {\n          if (!keyContent.includes('-----BEGIN PUBLIC KEY-----') && !keyContent.includes('-----BEGIN PRIVATE KEY-----')) {\n            throw new Error('Неверный формат ключа');\n          }\n          if (importType === 'own') {\n            if (keyContent.includes('-----BEGIN PUBLIC KEY-----')) {\n              setPublicKey(keyContent);\n            } else if (keyContent.includes('-----BEGIN PRIVATE KEY-----')) {\n              setPrivateKey(keyContent);\n            }\n          } else if (importType === 'other') {\n            const newId = Date.now().toString();\n            setOtherPublicKeys({ ...otherPublicKeys, [newId]: keyContent });\n          }\n          setError('');\n        } catch (err) {\n          setError(`Ошибка импорта: ${err.message}`);\n        }\n      };\n      reader.readAsText(file);\n      event.target.value = '';\n    }\n  };\n  const exportResults = () => {\n    const results = {\n      digest,\n      hash,\n      signature,\n      encryptedSessionKey,\n      encryptedText,\n      result,\n    };\n    const blob = new Blob([JSON.stringify(results, null, 2)], { type: 'application/json' });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'crypto_results.json';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Crypto App</h1>\n\n      <div className=\"keys-section\">\n        <h3>Keys</h3>\n        <div style={{ borderBottom: '1px solid #ccc', paddingBottom: '10px', marginBottom: '10px' }}>\n          <h4>Your Keys</h4>\n          <p>\n            <strong>Public Key:</strong> {showFullPublicKey ? publicKey : `${publicKey.substring(0, 50)}...`}\n            <button\n              className=\"show-full-btn\"\n              onClick={() => setShowFullPublicKey(!showFullPublicKey)}\n              style={{ marginLeft: '10px', padding: '4px 8px' }}\n            >\n              {showFullPublicKey ? 'Скрыть' : 'Показать полностью'}\n            </button>\n          </p>\n          <button onClick={() => exportKey(publicKey, 'public')} style={{ marginRight: '10px' }}>\n            Export Public Key\n          </button>\n          <button onClick={() => copyToClipboard(publicKey)} style={{ marginRight: '10px' }}>\n            Copy Public Key\n          </button>\n\n          <p>\n            <strong>Private Key:</strong> {showFullPrivateKey ? privateKey : `${privateKey.substring(0, 50)}...`}\n            <button\n              className=\"show-full-btn\"\n              onClick={() => setShowFullPrivateKey(!showFullPrivateKey)}\n              style={{ marginLeft: '10px', padding: '4px 8px' }}\n            >\n              {showFullPrivateKey ? 'Скрыть' : 'Показать полностью'}\n            </button>\n          </p>\n          <button onClick={() => exportKey(privateKey, 'private')} style={{ marginRight: '10px' }}>\n            Export Private Key\n          </button>\n          <button onClick={() => copyToClipboard(privateKey)} style={{ marginRight: '10px' }}>\n            Copy Private Key\n          </button>\n        </div>\n\n        <div style={{ borderBottom: '1px solid #ccc', paddingBottom: '10px', marginBottom: '10px' }}>\n          <h4>Import Key</h4>\n          <label>\n            Import Key Type:\n            <select\n              className=\"custom-select\"\n              value={importType}\n              onChange={(e) => setImportType(e.target.value)}\n              style={{ marginLeft: '10px', padding: '4px' }}\n            >\n              <option value=\"own\">Your Key</option>\n              <option value=\"other\">Other User's Key</option>\n            </select>\n          </label>\n          <label style={{ marginLeft: '10px' }}>\n            <input type=\"file\" onChange={handleImportKey} accept=\".pem\" style={{ marginLeft: '5px' }} />\n            Import Key\n          </label>\n        </div>\n\n        <div>\n          <h4>Other Users' Public Keys</h4>\n          <select\n            value={selectedOtherKeyId || ''}\n            className=\"custom-select\"\n            onChange={(e) => setSelectedOtherKeyId(e.target.value)}\n            style={{ width: '100%', padding: '8px', marginBottom: '10px' }}\n          >\n            <option value=\"\">Select a key</option>\n            {Object.entries(otherPublicKeys).map(([id, key], index) => (\n              <option key={id} value={id}>\n                Key {index + 1} (Preview: {key.substring(27, 40)}...)\n              </option>\n            ))}\n          </select>\n        </div>\n        {error && <p className=\"error\"><strong>Error:</strong> {error}</p>}\n      </div>\n\n      <div className=\"encrypt-section\">\n        <h3>Encrypt</h3>\n        <input\n          type=\"text\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          placeholder=\"Enter text to encrypt\"\n        />\n        <button onClick={handleEncrypt}>Encrypt</button>\n        <p><strong>Digest:</strong> {digest}</p>\n        <p><strong>Hash:</strong> {hash}</p>\n        <p><strong>Signature:</strong> {signature}</p>\n        <p><strong>Encrypted Session Key:</strong> {encryptedSessionKey}</p>\n        <p><strong>Encrypted Text:</strong> {encryptedText}</p>\n        <button onClick={exportDigest} style={{ marginRight: '10px' }}>\n          Export Digest\n        </button>\n        <button onClick={copyDigestToClipboard} style={{ marginRight: '10px' }}>\n          Copy Digest\n        </button>\n        <button onClick={exportResults}>\n          Export All Results\n        </button>\n      </div>\n\n      <div className=\"decrypt-section\">\n        <h3>Decrypt</h3>\n        <input\n          type=\"text\"\n          value={encryptedText}\n          onChange={(e) => setEncryptedText(e.target.value)}\n          placeholder=\"Enter encrypted text\"\n        />\n        <button onClick={handleDecrypt}>Decrypt</button>\n      </div>\n\n      <div className=\"result-section\">\n        <p><strong>Result:</strong> {result}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}