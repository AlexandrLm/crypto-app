{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alex\\\\Desktop\\\\crypto-app\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Мы оставим стили по умолчанию на этом этапе\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState(''); // Состояние для текста\n  const [result, setResult] = useState(''); // Состояние для результата\n\n  // Функция для отправки запроса на шифрование\n  const handleEncrypt = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/encrypt', {\n        text: text\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setResult(response.data.encrypted); // Обновляем результат\n    } catch (error) {\n      console.error('Error:', error);\n      setResult('Error occurred');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Crypto App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Enter text to encrypt\",\n        style: {\n          padding: '8px',\n          marginRight: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEncrypt,\n        style: {\n          padding: '8px'\n        },\n        children: \"Encrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Result: \", result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ylRvCHscU9z2zY5Us+rLbCe/mQ0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","text","setText","result","setResult","handleEncrypt","response","post","headers","data","encrypted","error","console","className","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","marginRight","onClick","_c","$RefreshReg$"],"sources":["C:/Users/alex/Desktop/crypto-app/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Мы оставим стили по умолчанию на этом этапе\n\nfunction App() {\n  const [text, setText] = useState(''); // Состояние для текста\n  const [result, setResult] = useState(''); // Состояние для результата\n\n  // Функция для отправки запроса на шифрование\n  const handleEncrypt = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/encrypt', {\n        text: text,\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      setResult(response.data.encrypted); // Обновляем результат\n    } catch (error) {\n      console.error('Error:', error);\n      setResult('Error occurred');\n    }\n  };\n\n  return (\n    <div className=\"App\" style={{ padding: '20px' }}>\n      <h1>Crypto App</h1>\n      <div>\n        <input\n          type=\"text\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          placeholder=\"Enter text to encrypt\"\n          style={{ padding: '8px', marginRight: '10px' }}\n        />\n        <button onClick={handleEncrypt} style={{ padding: '8px' }}>\n          Encrypt\n        </button>\n      </div>\n      <p>Result: {result}</p>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1C;EACA,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,mCAAmC,EAAE;QACrEN,IAAI,EAAEA;MACR,CAAC,EAAE;QACDO,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACFJ,SAAS,CAACE,QAAQ,CAACG,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC;IACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BP,SAAS,CAAC,gBAAgB,CAAC;IAC7B;EACF,CAAC;EAED,oBACEN,OAAA;IAAKe,SAAS,EAAC,KAAK;IAACC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9ClB,OAAA;MAAAkB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBtB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QACEuB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAErB,IAAK;QACZsB,QAAQ,EAAGC,CAAC,IAAKtB,OAAO,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACzCI,WAAW,EAAC,uBAAuB;QACnCZ,KAAK,EAAE;UAAEC,OAAO,EAAE,KAAK;UAAEY,WAAW,EAAE;QAAO;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACFtB,OAAA;QAAQ8B,OAAO,EAAEvB,aAAc;QAACS,KAAK,EAAE;UAAEC,OAAO,EAAE;QAAM,CAAE;QAAAC,QAAA,EAAC;MAE3D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNtB,OAAA;MAAAkB,QAAA,GAAG,UAAQ,EAACb,MAAM;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEV;AAACpB,EAAA,CAvCQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}