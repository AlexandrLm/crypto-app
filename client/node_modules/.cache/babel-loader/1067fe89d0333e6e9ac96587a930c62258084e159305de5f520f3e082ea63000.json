{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alex\\\\Desktop\\\\crypto-app\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState('');\n  const [encryptedText, setEncryptedText] = useState('');\n  const [encryptedSessionKey, setEncryptedSessionKey] = useState('');\n  const [result, setResult] = useState('');\n  const [publicKey, setPublicKey] = useState('');\n  const [privateKey, setPrivateKey] = useState('');\n  const [error, setError] = useState('');\n  const [showFullPublicKey, setShowFullPublicKey] = useState(false);\n  const [showFullPrivateKey, setShowFullPrivateKey] = useState(false);\n  const [digest, setDigest] = useState('');\n  const [hash, setHash] = useState('');\n  const [signature, setSignature] = useState('');\n  const [otherPublicKeys, setOtherPublicKeys] = useState({});\n  const [selectedOtherKeyId, setSelectedOtherKeyId] = useState(null);\n  useEffect(() => {\n    const fetchKeys = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/generate-keys', {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log('Keys response:', response.data);\n        setPublicKey(response.data.rsa_public_key);\n        setPrivateKey(response.data.rsa_private_key);\n        setError('');\n      } catch (error) {\n        console.error('Error fetching keys:', error.response ? error.response.data : error.message);\n        setError(`Failed to load keys. Details: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n      }\n    };\n    fetchKeys();\n  }, []);\n  const generateDigest = text => {\n    if (!text) return '';\n    return text.split(' ').map(word => {\n      let result = '';\n      for (let i = 2; i < word.length; i += 3) {\n        result += word[i] || '';\n      }\n      return result;\n    }).join('');\n  };\n  const handleEncrypt = async () => {\n    if (!publicKey || !privateKey) {\n      setError('Ключи не сгенерированы. Пожалуйста, подождите...');\n      return;\n    }\n    const calculatedDigest = generateDigest(text);\n    setDigest(calculatedDigest);\n    try {\n      const hashResponse = await axios.post('http://localhost:5000/api/hash', {\n        digest: calculatedDigest\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const {\n        hash: computedHash\n      } = hashResponse.data;\n      setHash(computedHash);\n      console.log(`Hash: ${computedHash}`);\n      const signResponse = await axios.post('http://localhost:5000/api/sign', {\n        hash: computedHash\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const {\n        signature: computedSignature\n      } = signResponse.data;\n      setSignature(computedSignature);\n      console.log(`Signature: ${computedSignature}`);\n      const encryptResponse = await axios.post('http://localhost:5000/api/encrypt', {\n        text: text,\n        digest: calculatedDigest\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const {\n        encrypted_text,\n        encrypted_session_key,\n        signature\n      } = encryptResponse.data;\n      setEncryptedText(`${encrypted_session_key}||${encrypted_text}`);\n      setEncryptedSessionKey(encrypted_session_key);\n      setResult(`${encrypted_session_key}||${encrypted_text}`);\n      setError('');\n    } catch (error) {\n      console.error('Error:', error.response ? error.response.data : error.message);\n      setError(`Ошибка. Детали: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n    }\n  };\n  const handleDecrypt = async () => {\n    if (!encryptedText) {\n      setError('Введите зашифрованный текст');\n      return;\n    }\n    const [encryptedSessionKey, encryptedTextPart] = result.split('||');\n    if (!encryptedSessionKey || !encryptedTextPart) {\n      setError('Некорректный формат зашифрованного текста');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/decrypt', {\n        encrypted_text: encryptedTextPart,\n        encrypted_session_key: encryptedSessionKey,\n        signature: signature,\n        digest: digest\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const {\n        decrypted,\n        signature_valid\n      } = response.data;\n      setResult(`Decrypted: ${decrypted}, Signature Valid: ${signature_valid}`);\n      setError('');\n    } catch (error) {\n      console.error('Error decrypting:', error.response ? error.response.data : error.message);\n      setError(`Ошибка дешифрования. Детали: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n    }\n  };\n  const exportKey = (key, keyType) => {\n    const blob = new Blob([key], {\n      type: 'text/plain'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `${keyType}_key.pem`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n  const copyToClipboard = key => {\n    navigator.clipboard.writeText(key).then(() => {\n      alert('Copied to clipboard!');\n    }).catch(err => {\n      setError(`Failed to copy: ${err.message}`);\n    });\n  };\n  const exportDigest = () => {\n    const blob = new Blob([digest], {\n      type: 'text/plain'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'digest.txt';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n  const copyDigestToClipboard = () => {\n    navigator.clipboard.writeText(digest).then(() => {\n      alert('Digest copied to clipboard!');\n    }).catch(err => {\n      setError(`Failed to copy digest: ${err.message}`);\n    });\n  };\n  const handleImportKey = (event, keyType) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const keyContent = e.target.result;\n        try {\n          if (keyType === 'public' && !keyContent.includes('-----BEGIN RSA PUBLIC KEY-----')) {\n            throw new Error('Неверный формат публичного ключа');\n          }\n          if (keyType === 'private' && !keyContent.includes('-----BEGIN RSA PRIVATE KEY-----')) {\n            throw new Error('Неверный формат приватного ключа');\n          }\n          if (keyType === 'public') {\n            setPublicKey(keyContent);\n          } else if (keyType === 'private') {\n            setPrivateKey(keyContent);\n          }\n          setError('');\n        } catch (err) {\n          setError(`Ошибка импорта: ${err.message}`);\n        }\n      };\n      reader.readAsText(file);\n      event.target.value = '';\n    }\n  };\n  const exportResults = () => {\n    const results = {\n      digest,\n      hash,\n      signature,\n      encryptedSessionKey,\n      encryptedText,\n      result\n    };\n    const blob = new Blob([JSON.stringify(results, null, 2)], {\n      type: 'application/json'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'crypto_results.json';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Crypto App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keys-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Keys\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Public Key:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), \" \", showFullPublicKey ? publicKey : `${publicKey.substring(0, 50)}...`, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"show-full-btn\",\n          onClick: () => setShowFullPublicKey(!showFullPublicKey),\n          children: showFullPublicKey ? 'Скрыть' : 'Показать полностью'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => exportKey(publicKey, 'public'),\n        style: {\n          marginRight: '10px'\n        },\n        children: \"Export Public Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => copyToClipboard(publicKey),\n        style: {\n          marginRight: '10px'\n        },\n        children: \"Copy Public Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Import Public Key\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => handleImportKey(e, 'public'),\n          accept: \".pem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Other Users' Public Keys\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Import Other Public Key\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => handleImportOtherPublicKey(e),\n          accept: \".pem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedOtherKeyId || '',\n        onChange: e => setSelectedOtherKeyId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), Object.entries(otherPublicKeys).map(([id, key]) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: id,\n          children: [\"Key \", id.substring(0, 8), \"...\"]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Error:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 40\n        }, this), \" \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"encrypt-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Encrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Enter text to encrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEncrypt,\n        children: \"Encrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Digest:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 12\n        }, this), \" \", digest]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Hash:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 12\n        }, this), \" \", hash]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Signature:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 12\n        }, this), \" \", signature]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Encrypted Session Key:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 12\n        }, this), \" \", encryptedSessionKey]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Encrypted Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 12\n        }, this), \" \", encryptedText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportDigest,\n        style: {\n          marginRight: '10px'\n        },\n        children: \"Export Digest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: copyDigestToClipboard,\n        style: {\n          marginRight: '10px'\n        },\n        children: \"Copy Digest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportResults,\n        children: \"Export All Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"decrypt-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Decrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: encryptedText,\n        onChange: e => setEncryptedText(e.target.value),\n        placeholder: \"Enter encrypted text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDecrypt,\n        children: \"Decrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-section\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Result:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 12\n        }, this), \" \", result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YymN7Uq8IsBrlMK/tUDe6Y6QMbs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","text","setText","encryptedText","setEncryptedText","encryptedSessionKey","setEncryptedSessionKey","result","setResult","publicKey","setPublicKey","privateKey","setPrivateKey","error","setError","showFullPublicKey","setShowFullPublicKey","showFullPrivateKey","setShowFullPrivateKey","digest","setDigest","hash","setHash","signature","setSignature","otherPublicKeys","setOtherPublicKeys","selectedOtherKeyId","setSelectedOtherKeyId","fetchKeys","response","get","headers","console","log","data","rsa_public_key","rsa_private_key","message","JSON","stringify","generateDigest","split","map","word","i","length","join","handleEncrypt","calculatedDigest","hashResponse","post","computedHash","signResponse","computedSignature","encryptResponse","encrypted_text","encrypted_session_key","handleDecrypt","encryptedTextPart","decrypted","signature_valid","exportKey","key","keyType","blob","Blob","type","url","window","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","copyToClipboard","navigator","clipboard","writeText","then","alert","catch","err","exportDigest","copyDigestToClipboard","handleImportKey","event","file","target","files","reader","FileReader","onload","e","keyContent","includes","Error","readAsText","value","exportResults","results","className","children","fileName","_jsxFileName","lineNumber","columnNumber","substring","onClick","style","marginRight","onChange","accept","handleImportOtherPublicKey","Object","entries","id","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/alex/Desktop/crypto-app/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [text, setText] = useState('');\n  const [encryptedText, setEncryptedText] = useState('');\n  const [encryptedSessionKey, setEncryptedSessionKey] = useState('');\n  const [result, setResult] = useState('');\n  const [publicKey, setPublicKey] = useState('');\n  const [privateKey, setPrivateKey] = useState('');\n  const [error, setError] = useState('');\n  const [showFullPublicKey, setShowFullPublicKey] = useState(false);\n  const [showFullPrivateKey, setShowFullPrivateKey] = useState(false);\n  const [digest, setDigest] = useState('');\n  const [hash, setHash] = useState('');\n  const [signature, setSignature] = useState('');\n  const [otherPublicKeys, setOtherPublicKeys] = useState({});\n  const [selectedOtherKeyId, setSelectedOtherKeyId] = useState(null);\n\n  useEffect(() => {\n    const fetchKeys = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/generate-keys', {\n          headers: { 'Content-Type': 'application/json' },\n        });\n        console.log('Keys response:', response.data);\n        setPublicKey(response.data.rsa_public_key);\n        setPrivateKey(response.data.rsa_private_key);\n        setError('');\n      } catch (error) {\n        console.error('Error fetching keys:', error.response ? error.response.data : error.message);\n        setError(`Failed to load keys. Details: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n      }\n    };\n    fetchKeys();\n  }, []);\n\n  const generateDigest = (text) => {\n    if (!text) return '';\n    return text\n      .split(' ')\n      .map(word => {\n        let result = '';\n        for (let i = 2; i < word.length; i += 3) {\n          result += word[i] || '';\n        }\n        return result;\n      })\n      .join('');\n  };\n\n  const handleEncrypt = async () => {\n    if (!publicKey || !privateKey) {\n      setError('Ключи не сгенерированы. Пожалуйста, подождите...');\n      return;\n    }\n    const calculatedDigest = generateDigest(text);\n    setDigest(calculatedDigest);\n    try {\n      const hashResponse = await axios.post('http://localhost:5000/api/hash', {\n        digest: calculatedDigest,\n      }, {\n        headers: { 'Content-Type': 'application/json' },\n      });\n      const { hash: computedHash } = hashResponse.data;\n      setHash(computedHash);\n      console.log(`Hash: ${computedHash}`);\n\n      const signResponse = await axios.post('http://localhost:5000/api/sign', {\n        hash: computedHash,\n      }, {\n        headers: { 'Content-Type': 'application/json' },\n      });\n      const { signature: computedSignature } = signResponse.data;\n      setSignature(computedSignature);\n      console.log(`Signature: ${computedSignature}`);\n\n      const encryptResponse = await axios.post('http://localhost:5000/api/encrypt', {\n        text: text,\n        digest: calculatedDigest,\n      }, {\n        headers: { 'Content-Type': 'application/json' },\n      });\n      const { encrypted_text, encrypted_session_key, signature } = encryptResponse.data;\n      setEncryptedText(`${encrypted_session_key}||${encrypted_text}`);\n      setEncryptedSessionKey(encrypted_session_key);\n      setResult(`${encrypted_session_key}||${encrypted_text}`);\n      setError('');\n    } catch (error) {\n      console.error('Error:', error.response ? error.response.data : error.message);\n      setError(`Ошибка. Детали: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n    }\n  };\n\n  const handleDecrypt = async () => {\n    if (!encryptedText) {\n      setError('Введите зашифрованный текст');\n      return;\n    }\n    const [encryptedSessionKey, encryptedTextPart] = result.split('||');\n    if (!encryptedSessionKey || !encryptedTextPart) {\n      setError('Некорректный формат зашифрованного текста');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/decrypt', {\n        encrypted_text: encryptedTextPart,\n        encrypted_session_key: encryptedSessionKey,\n        signature: signature,\n        digest: digest,\n      }, {\n        headers: { 'Content-Type': 'application/json' },\n      });\n      const { decrypted, signature_valid } = response.data;\n      setResult(`Decrypted: ${decrypted}, Signature Valid: ${signature_valid}`);\n      setError('');\n    } catch (error) {\n      console.error('Error decrypting:', error.response ? error.response.data : error.message);\n      setError(`Ошибка дешифрования. Детали: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n    }\n  };\n\n  const exportKey = (key, keyType) => {\n    const blob = new Blob([key], { type: 'text/plain' });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `${keyType}_key.pem`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n\n  const copyToClipboard = (key) => {\n    navigator.clipboard.writeText(key).then(() => {\n      alert('Copied to clipboard!');\n    }).catch(err => {\n      setError(`Failed to copy: ${err.message}`);\n    });\n  };\n\n  const exportDigest = () => {\n    const blob = new Blob([digest], { type: 'text/plain' });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'digest.txt';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n\n  const copyDigestToClipboard = () => {\n    navigator.clipboard.writeText(digest).then(() => {\n      alert('Digest copied to clipboard!');\n    }).catch(err => {\n      setError(`Failed to copy digest: ${err.message}`);\n    });\n  };\n\n  const handleImportKey = (event, keyType) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const keyContent = e.target.result;\n        try {\n          if (keyType === 'public' && !keyContent.includes('-----BEGIN RSA PUBLIC KEY-----')) {\n            throw new Error('Неверный формат публичного ключа');\n          }\n          if (keyType === 'private' && !keyContent.includes('-----BEGIN RSA PRIVATE KEY-----')) {\n            throw new Error('Неверный формат приватного ключа');\n          }\n          if (keyType === 'public') {\n            setPublicKey(keyContent);\n          } else if (keyType === 'private') {\n            setPrivateKey(keyContent);\n          }\n          setError('');\n        } catch (err) {\n          setError(`Ошибка импорта: ${err.message}`);\n        }\n      };\n      reader.readAsText(file);\n      event.target.value = '';\n    }\n  };\n\n  const exportResults = () => {\n    const results = {\n      digest,\n      hash,\n      signature,\n      encryptedSessionKey,\n      encryptedText,\n      result,\n    };\n    const blob = new Blob([JSON.stringify(results, null, 2)], { type: 'application/json' });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'crypto_results.json';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Crypto App</h1>\n\n      <div className=\"keys-section\">\n        <h3>Keys</h3>\n        <p>\n          <strong>Public Key:</strong> {showFullPublicKey ? publicKey : `${publicKey.substring(0, 50)}...`}\n          <button className=\"show-full-btn\" onClick={() => setShowFullPublicKey(!showFullPublicKey)}>\n            {showFullPublicKey ? 'Скрыть' : 'Показать полностью'}\n          </button>\n        </p>\n        <button onClick={() => exportKey(publicKey, 'public')} style={{ marginRight: '10px' }}>\n          Export Public Key\n        </button>\n        <button onClick={() => copyToClipboard(publicKey)} style={{ marginRight: '10px' }}>\n          Copy Public Key\n        </button>\n        <label>\n          Import Public Key\n          <input type=\"file\" onChange={(e) => handleImportKey(e, 'public')} accept=\".pem\" />\n        </label>\n\n        <h4>Other Users' Public Keys</h4>\n        <label>\n          Import Other Public Key\n          <input\n            type=\"file\"\n            onChange={(e) => handleImportOtherPublicKey(e)}\n            accept=\".pem\"\n          />\n        </label>\n        <select\n          value={selectedOtherKeyId || ''}\n          onChange={(e) => setSelectedOtherKeyId(e.target.value)}\n        >\n          <option value=\"\">Select a key</option>\n          {Object.entries(otherPublicKeys).map(([id, key]) => (\n            <option key={id} value={id}>\n              Key {id.substring(0, 8)}...\n            </option>\n          ))}\n        </select>\n        {error && <p className=\"error\"><strong>Error:</strong> {error}</p>}\n      </div>\n\n      <div className=\"encrypt-section\">\n        <h3>Encrypt</h3>\n        <input\n          type=\"text\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          placeholder=\"Enter text to encrypt\"\n        />\n        <button onClick={handleEncrypt}>Encrypt</button>\n        <p><strong>Digest:</strong> {digest}</p>\n        <p><strong>Hash:</strong> {hash}</p>\n        <p><strong>Signature:</strong> {signature}</p>\n        <p><strong>Encrypted Session Key:</strong> {encryptedSessionKey}</p>\n        <p><strong>Encrypted Text:</strong> {encryptedText}</p>\n        <button onClick={exportDigest} style={{ marginRight: '10px' }}>\n          Export Digest\n        </button>\n        <button onClick={copyDigestToClipboard} style={{ marginRight: '10px' }}>\n          Copy Digest\n        </button>\n        <button onClick={exportResults}>\n          Export All Results\n        </button>\n      </div>\n\n      <div className=\"decrypt-section\">\n        <h3>Decrypt</h3>\n        <input\n          type=\"text\"\n          value={encryptedText}\n          onChange={(e) => setEncryptedText(e.target.value)}\n          placeholder=\"Enter encrypted text\"\n        />\n        <button onClick={handleDecrypt}>Decrypt</button>\n      </div>\n\n      <div className=\"result-section\">\n        <p><strong>Result:</strong> {result}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}