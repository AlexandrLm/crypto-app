{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[text,setText]=useState('');const[encryptedText,setEncryptedText]=useState('');const[encryptedSessionKey,setEncryptedSessionKey]=useState('');const[result,setResult]=useState('');const[publicKey,setPublicKey]=useState('');const[privateKey,setPrivateKey]=useState('');const[error,setError]=useState('');const[showFullPublicKey,setShowFullPublicKey]=useState(false);const[showFullPrivateKey,setShowFullPrivateKey]=useState(false);const[digest,setDigest]=useState('');const[hash,setHash]=useState('');const[signature,setSignature]=useState('');const[otherPublicKeys,setOtherPublicKeys]=useState({});const[selectedOtherKeyId,setSelectedOtherKeyId]=useState(null);const[importType,setImportType]=useState('own');// 'own' для собственного ключа, 'other' для ключа другого пользователя\nuseEffect(()=>{const fetchKeys=async()=>{try{const response=await axios.get('http://localhost:5000/api/generate-keys',{headers:{'Content-Type':'application/json'}});console.log('Keys response:',response.data);setPublicKey(response.data.rsa_public_key);setPrivateKey(response.data.rsa_private_key);setError('');}catch(error){console.error('Error fetching keys:',error.response?error.response.data:error.message);setError(`Failed to load keys. Details: ${error.response?JSON.stringify(error.response.data):error.message}`);}};fetchKeys();},[]);const generateDigest=text=>{if(!text)return'';return text.split(' ').map(word=>{let result='';for(let i=2;i<word.length;i+=3){result+=word[i]||'';}return result;}).join('');};const handleEncrypt=async()=>{if(!publicKey||!privateKey){setError('Ключи не сгенерированы. Пожалуйста, подождите...');return;}const calculatedDigest=generateDigest(text);setDigest(calculatedDigest);try{const hashResponse=await axios.post('http://localhost:5000/api/hash',{digest:calculatedDigest},{headers:{'Content-Type':'application/json'}});const{hash:computedHash}=hashResponse.data;setHash(computedHash);console.log(`Hash: ${computedHash}`);const signResponse=await axios.post('http://localhost:5000/api/sign',{hash:computedHash},{headers:{'Content-Type':'application/json'}});const{signature:computedSignature}=signResponse.data;setSignature(computedSignature);console.log(`Signature: ${computedSignature}`);const encryptResponse=await axios.post('http://localhost:5000/api/encrypt',{text:text,digest:calculatedDigest},{headers:{'Content-Type':'application/json'}});const{encrypted_text,encrypted_session_key,signature}=encryptResponse.data;const fullEncryptedText=`${encrypted_session_key}||${encrypted_text}`;setEncryptedText(fullEncryptedText);setEncryptedSessionKey(encrypted_session_key);setResult(fullEncryptedText);setError('');}catch(error){console.error('Error:',error.response?error.response.data:error.message);setError(`Ошибка. Детали: ${error.response?JSON.stringify(error.response.data):error.message}`);}};const handleDecrypt=async()=>{if(!encryptedText){setError('Введите зашифрованный текст');return;}const[encryptedSessionKey,encryptedTextPart]=encryptedText.split('||');if(!encryptedSessionKey||!encryptedTextPart){setError('Некорректный формат зашифрованного текста. Ожидается: <session_key>||<encrypted_text>');return;}try{const response=await axios.post('http://localhost:5000/api/decrypt',{encrypted_text:encryptedTextPart,encrypted_session_key:encryptedSessionKey,signature:signature,digest:digest,other_public_key:selectedOtherKeyId?otherPublicKeys[selectedOtherKeyId]:null},{headers:{'Content-Type':'application/json'}});const{decrypted,signature_valid}=response.data;setResult(`Decrypted: ${decrypted}, Signature Valid: ${signature_valid}`);setError('');}catch(error){console.error('Error decrypting:',error.response?error.response.data:error.message);setError(`Ошибка дешифрования. Детали: ${error.response?JSON.stringify(error.response.data):error.message}`);}};const exportKey=(key,keyType)=>{const blob=new Blob([key],{type:'text/plain'});const url=window.URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download=`${keyType}_key.pem`;document.body.appendChild(link);link.click();document.body.removeChild(link);window.URL.revokeObjectURL(url);};const copyToClipboard=key=>{navigator.clipboard.writeText(key).then(()=>{alert('Copied to clipboard!');}).catch(err=>{setError(`Failed to copy: ${err.message}`);});};const exportDigest=()=>{const blob=new Blob([digest],{type:'text/plain'});const url=window.URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download='digest.txt';document.body.appendChild(link);link.click();document.body.removeChild(link);window.URL.revokeObjectURL(url);};const copyDigestToClipboard=()=>{navigator.clipboard.writeText(digest).then(()=>{alert('Digest copied to clipboard!');}).catch(err=>{setError(`Failed to copy digest: ${err.message}`);});};const handleImportKey=event=>{const file=event.target.files[0];if(file){const reader=new FileReader();reader.onload=e=>{const keyContent=e.target.result;try{if(!keyContent.includes('-----BEGIN PUBLIC KEY-----')&&!keyContent.includes('-----BEGIN PRIVATE KEY-----')){throw new Error('Неверный формат ключа');}if(importType==='own'){if(keyContent.includes('-----BEGIN PUBLIC KEY-----')){setPublicKey(keyContent);}else if(keyContent.includes('-----BEGIN PRIVATE KEY-----')){setPrivateKey(keyContent);}}else if(importType==='other'){const newId=Date.now().toString();setOtherPublicKeys({...otherPublicKeys,[newId]:keyContent});}setError('');}catch(err){setError(`Ошибка импорта: ${err.message}`);}};reader.readAsText(file);event.target.value='';}};const exportResults=()=>{const results={digest,hash,signature,encryptedSessionKey,encryptedText,result};const blob=new Blob([JSON.stringify(results,null,2)],{type:'application/json'});const url=window.URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download='crypto_results.json';document.body.appendChild(link);link.click();document.body.removeChild(link);window.URL.revokeObjectURL(url);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Crypto App\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"keys-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Keys\"}),/*#__PURE__*/_jsxs(\"div\",{style:{borderBottom:'1px solid #ccc',paddingBottom:'10px',marginBottom:'10px'},children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Your Keys\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Public Key:\"}),\" \",showFullPublicKey?publicKey:`${publicKey.substring(0,50)}...`,/*#__PURE__*/_jsx(\"button\",{className:\"show-full-btn\",onClick:()=>setShowFullPublicKey(!showFullPublicKey),style:{marginLeft:'10px',padding:'4px 8px'},children:showFullPublicKey?'Скрыть':'Показать полностью'})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>exportKey(publicKey,'public'),style:{marginRight:'10px'},children:\"Export Public Key\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>copyToClipboard(publicKey),style:{marginRight:'10px'},children:\"Copy Public Key\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Private Key:\"}),\" \",showFullPrivateKey?privateKey:`${privateKey.substring(0,50)}...`,/*#__PURE__*/_jsx(\"button\",{className:\"show-full-btn\",onClick:()=>setShowFullPrivateKey(!showFullPrivateKey),style:{marginLeft:'10px',padding:'4px 8px'},children:showFullPrivateKey?'Скрыть':'Показать полностью'})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>exportKey(privateKey,'private'),style:{marginRight:'10px'},children:\"Export Private Key\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>copyToClipboard(privateKey),style:{marginRight:'10px'},children:\"Copy Private Key\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{borderBottom:'1px solid #ccc',paddingBottom:'10px',marginBottom:'10px'},children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Import Key\"}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Import Key Type:\",/*#__PURE__*/_jsxs(\"select\",{value:importType,onChange:e=>setImportType(e.target.value),style:{marginLeft:'10px',padding:'4px'},children:[/*#__PURE__*/_jsx(\"option\",{value:\"own\",children:\"Your Key\"}),/*#__PURE__*/_jsx(\"option\",{value:\"other\",children:\"Other User's Key\"})]})]}),/*#__PURE__*/_jsxs(\"label\",{style:{marginLeft:'10px'},children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:handleImportKey,accept:\".pem\",style:{marginLeft:'5px'}}),\"Import Key\"]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Other Users' Public Keys\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedOtherKeyId||'',className:\"custom-select\",onChange:e=>setSelectedOtherKeyId(e.target.value),style:{width:'100%',padding:'8px',marginBottom:'10px'},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a key\"}),Object.entries(otherPublicKeys).map((_ref,index)=>{let[id,key]=_ref;return/*#__PURE__*/_jsxs(\"option\",{value:id,children:[\"Key \",index+1,\" (Preview: \",key.substring(27,40),\"...)\"]},id);})]})]}),error&&/*#__PURE__*/_jsxs(\"p\",{className:\"error\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Error:\"}),\" \",error]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"encrypt-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Encrypt\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:text,onChange:e=>setText(e.target.value),placeholder:\"Enter text to encrypt\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleEncrypt,children:\"Encrypt\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Digest:\"}),\" \",digest]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Hash:\"}),\" \",hash]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Signature:\"}),\" \",signature]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Encrypted Session Key:\"}),\" \",encryptedSessionKey]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Encrypted Text:\"}),\" \",encryptedText]}),/*#__PURE__*/_jsx(\"button\",{onClick:exportDigest,style:{marginRight:'10px'},children:\"Export Digest\"}),/*#__PURE__*/_jsx(\"button\",{onClick:copyDigestToClipboard,style:{marginRight:'10px'},children:\"Copy Digest\"}),/*#__PURE__*/_jsx(\"button\",{onClick:exportResults,children:\"Export All Results\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"decrypt-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Decrypt\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:encryptedText,onChange:e=>setEncryptedText(e.target.value),placeholder:\"Enter encrypted text\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleDecrypt,children:\"Decrypt\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"result-section\",children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Result:\"}),\" \",result]})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","App","text","setText","encryptedText","setEncryptedText","encryptedSessionKey","setEncryptedSessionKey","result","setResult","publicKey","setPublicKey","privateKey","setPrivateKey","error","setError","showFullPublicKey","setShowFullPublicKey","showFullPrivateKey","setShowFullPrivateKey","digest","setDigest","hash","setHash","signature","setSignature","otherPublicKeys","setOtherPublicKeys","selectedOtherKeyId","setSelectedOtherKeyId","importType","setImportType","fetchKeys","response","get","headers","console","log","data","rsa_public_key","rsa_private_key","message","JSON","stringify","generateDigest","split","map","word","i","length","join","handleEncrypt","calculatedDigest","hashResponse","post","computedHash","signResponse","computedSignature","encryptResponse","encrypted_text","encrypted_session_key","fullEncryptedText","handleDecrypt","encryptedTextPart","other_public_key","decrypted","signature_valid","exportKey","key","keyType","blob","Blob","type","url","window","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","copyToClipboard","navigator","clipboard","writeText","then","alert","catch","err","exportDigest","copyDigestToClipboard","handleImportKey","event","file","target","files","reader","FileReader","onload","e","keyContent","includes","Error","newId","Date","now","toString","readAsText","value","exportResults","results","className","children","style","borderBottom","paddingBottom","marginBottom","substring","onClick","marginLeft","padding","marginRight","onChange","accept","width","Object","entries","_ref","index","id","placeholder"],"sources":["C:/Users/alex/Desktop/crypto-app/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [text, setText] = useState('');\n  const [encryptedText, setEncryptedText] = useState('');\n  const [encryptedSessionKey, setEncryptedSessionKey] = useState('');\n  const [result, setResult] = useState('');\n  const [publicKey, setPublicKey] = useState('');\n  const [privateKey, setPrivateKey] = useState('');\n  const [error, setError] = useState('');\n  const [showFullPublicKey, setShowFullPublicKey] = useState(false);\n  const [showFullPrivateKey, setShowFullPrivateKey] = useState(false);\n  const [digest, setDigest] = useState('');\n  const [hash, setHash] = useState('');\n  const [signature, setSignature] = useState('');\n  const [otherPublicKeys, setOtherPublicKeys] = useState({});\n  const [selectedOtherKeyId, setSelectedOtherKeyId] = useState(null);\n  const [importType, setImportType] = useState('own'); // 'own' для собственного ключа, 'other' для ключа другого пользователя\n\n  useEffect(() => {\n    const fetchKeys = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/generate-keys', {\n          headers: { 'Content-Type': 'application/json' },\n        });\n        console.log('Keys response:', response.data);\n        setPublicKey(response.data.rsa_public_key);\n        setPrivateKey(response.data.rsa_private_key);\n        setError('');\n      } catch (error) {\n        console.error('Error fetching keys:', error.response ? error.response.data : error.message);\n        setError(`Failed to load keys. Details: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n      }\n    };\n    fetchKeys();\n  }, []);\n\n  const generateDigest = (text) => {\n    if (!text) return '';\n    return text\n      .split(' ')\n      .map(word => {\n        let result = '';\n        for (let i = 2; i < word.length; i += 3) {\n          result += word[i] || '';\n        }\n        return result;\n      })\n      .join('');\n  };\n\n  const handleEncrypt = async () => {\n    if (!publicKey || !privateKey) {\n      setError('Ключи не сгенерированы. Пожалуйста, подождите...');\n      return;\n    }\n    const calculatedDigest = generateDigest(text);\n    setDigest(calculatedDigest);\n    try {\n      const hashResponse = await axios.post(\n        'http://localhost:5000/api/hash',\n        { digest: calculatedDigest },\n        { headers: { 'Content-Type': 'application/json' } }\n      );\n      const { hash: computedHash } = hashResponse.data;\n      setHash(computedHash);\n      console.log(`Hash: ${computedHash}`);\n\n      const signResponse = await axios.post(\n        'http://localhost:5000/api/sign',\n        { hash: computedHash },\n        { headers: { 'Content-Type': 'application/json' } }\n      );\n      const { signature: computedSignature } = signResponse.data;\n      setSignature(computedSignature);\n      console.log(`Signature: ${computedSignature}`);\n\n      const encryptResponse = await axios.post(\n        'http://localhost:5000/api/encrypt',\n        { text: text, digest: calculatedDigest },\n        { headers: { 'Content-Type': 'application/json' } }\n      );\n      const { encrypted_text, encrypted_session_key, signature } = encryptResponse.data;\n      const fullEncryptedText = `${encrypted_session_key}||${encrypted_text}`;\n      setEncryptedText(fullEncryptedText);\n      setEncryptedSessionKey(encrypted_session_key);\n      setResult(fullEncryptedText);\n      setError('');\n    } catch (error) {\n      console.error('Error:', error.response ? error.response.data : error.message);\n      setError(`Ошибка. Детали: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n    }\n  };\n\n  const handleDecrypt = async () => {\n    if (!encryptedText) {\n      setError('Введите зашифрованный текст');\n      return;\n    }\n    const [encryptedSessionKey, encryptedTextPart] = encryptedText.split('||');\n    if (!encryptedSessionKey || !encryptedTextPart) {\n      setError('Некорректный формат зашифрованного текста. Ожидается: <session_key>||<encrypted_text>');\n      return;\n    }\n    try {\n      const response = await axios.post(\n        'http://localhost:5000/api/decrypt',\n        {\n          encrypted_text: encryptedTextPart,\n          encrypted_session_key: encryptedSessionKey,\n          signature: signature,\n          digest: digest,\n          other_public_key: selectedOtherKeyId ? otherPublicKeys[selectedOtherKeyId] : null,\n        },\n        { headers: { 'Content-Type': 'application/json' } }\n      );\n      const { decrypted, signature_valid } = response.data;\n      setResult(`Decrypted: ${decrypted}, Signature Valid: ${signature_valid}`);\n      setError('');\n    } catch (error) {\n      console.error('Error decrypting:', error.response ? error.response.data : error.message);\n      setError(`Ошибка дешифрования. Детали: ${error.response ? JSON.stringify(error.response.data) : error.message}`);\n    }\n  };\n\n  const exportKey = (key, keyType) => {\n    const blob = new Blob([key], { type: 'text/plain' });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `${keyType}_key.pem`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n\n  const copyToClipboard = (key) => {\n    navigator.clipboard.writeText(key).then(() => {\n      alert('Copied to clipboard!');\n    }).catch(err => {\n      setError(`Failed to copy: ${err.message}`);\n    });\n  };\n\n  const exportDigest = () => {\n    const blob = new Blob([digest], { type: 'text/plain' });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'digest.txt';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n\n  const copyDigestToClipboard = () => {\n    navigator.clipboard.writeText(digest).then(() => {\n      alert('Digest copied to clipboard!');\n    }).catch(err => {\n      setError(`Failed to copy digest: ${err.message}`);\n    });\n  };\n\n  const handleImportKey = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const keyContent = e.target.result;\n        try {\n          if (!keyContent.includes('-----BEGIN PUBLIC KEY-----') && !keyContent.includes('-----BEGIN PRIVATE KEY-----')) {\n            throw new Error('Неверный формат ключа');\n          }\n          if (importType === 'own') {\n            if (keyContent.includes('-----BEGIN PUBLIC KEY-----')) {\n              setPublicKey(keyContent);\n            } else if (keyContent.includes('-----BEGIN PRIVATE KEY-----')) {\n              setPrivateKey(keyContent);\n            }\n          } else if (importType === 'other') {\n            const newId = Date.now().toString();\n            setOtherPublicKeys({ ...otherPublicKeys, [newId]: keyContent });\n          }\n          setError('');\n        } catch (err) {\n          setError(`Ошибка импорта: ${err.message}`);\n        }\n      };\n      reader.readAsText(file);\n      event.target.value = '';\n    }\n  };\n  const exportResults = () => {\n    const results = {\n      digest,\n      hash,\n      signature,\n      encryptedSessionKey,\n      encryptedText,\n      result,\n    };\n    const blob = new Blob([JSON.stringify(results, null, 2)], { type: 'application/json' });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'crypto_results.json';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Crypto App</h1>\n\n      <div className=\"keys-section\">\n        <h3>Keys</h3>\n        <div style={{ borderBottom: '1px solid #ccc', paddingBottom: '10px', marginBottom: '10px' }}>\n          <h4>Your Keys</h4>\n          <p>\n            <strong>Public Key:</strong> {showFullPublicKey ? publicKey : `${publicKey.substring(0, 50)}...`}\n            <button\n              className=\"show-full-btn\"\n              onClick={() => setShowFullPublicKey(!showFullPublicKey)}\n              style={{ marginLeft: '10px', padding: '4px 8px' }}\n            >\n              {showFullPublicKey ? 'Скрыть' : 'Показать полностью'}\n            </button>\n          </p>\n          <button onClick={() => exportKey(publicKey, 'public')} style={{ marginRight: '10px' }}>\n            Export Public Key\n          </button>\n          <button onClick={() => copyToClipboard(publicKey)} style={{ marginRight: '10px' }}>\n            Copy Public Key\n          </button>\n\n          <p>\n            <strong>Private Key:</strong> {showFullPrivateKey ? privateKey : `${privateKey.substring(0, 50)}...`}\n            <button\n              className=\"show-full-btn\"\n              onClick={() => setShowFullPrivateKey(!showFullPrivateKey)}\n              style={{ marginLeft: '10px', padding: '4px 8px' }}\n            >\n              {showFullPrivateKey ? 'Скрыть' : 'Показать полностью'}\n            </button>\n          </p>\n          <button onClick={() => exportKey(privateKey, 'private')} style={{ marginRight: '10px' }}>\n            Export Private Key\n          </button>\n          <button onClick={() => copyToClipboard(privateKey)} style={{ marginRight: '10px' }}>\n            Copy Private Key\n          </button>\n        </div>\n\n        <div style={{ borderBottom: '1px solid #ccc', paddingBottom: '10px', marginBottom: '10px' }}>\n          <h4>Import Key</h4>\n          <label>\n            Import Key Type:\n            <select\n              value={importType}\n              onChange={(e) => setImportType(e.target.value)}\n              style={{ marginLeft: '10px', padding: '4px' }}\n            >\n              <option value=\"own\">Your Key</option>\n              <option value=\"other\">Other User's Key</option>\n            </select>\n          </label>\n          <label style={{ marginLeft: '10px' }}>\n            <input type=\"file\" onChange={handleImportKey} accept=\".pem\" style={{ marginLeft: '5px' }} />\n            Import Key\n          </label>\n        </div>\n\n        <div>\n          <h4>Other Users' Public Keys</h4>\n          <select\n            value={selectedOtherKeyId || ''}\n            className=\"custom-select\"\n            onChange={(e) => setSelectedOtherKeyId(e.target.value)}\n            style={{ width: '100%', padding: '8px', marginBottom: '10px' }}\n          >\n            <option value=\"\">Select a key</option>\n            {Object.entries(otherPublicKeys).map(([id, key], index) => (\n              <option key={id} value={id}>\n                Key {index + 1} (Preview: {key.substring(27, 40)}...)\n              </option>\n            ))}\n          </select>\n        </div>\n        {error && <p className=\"error\"><strong>Error:</strong> {error}</p>}\n      </div>\n\n      <div className=\"encrypt-section\">\n        <h3>Encrypt</h3>\n        <input\n          type=\"text\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          placeholder=\"Enter text to encrypt\"\n        />\n        <button onClick={handleEncrypt}>Encrypt</button>\n        <p><strong>Digest:</strong> {digest}</p>\n        <p><strong>Hash:</strong> {hash}</p>\n        <p><strong>Signature:</strong> {signature}</p>\n        <p><strong>Encrypted Session Key:</strong> {encryptedSessionKey}</p>\n        <p><strong>Encrypted Text:</strong> {encryptedText}</p>\n        <button onClick={exportDigest} style={{ marginRight: '10px' }}>\n          Export Digest\n        </button>\n        <button onClick={copyDigestToClipboard} style={{ marginRight: '10px' }}>\n          Copy Digest\n        </button>\n        <button onClick={exportResults}>\n          Export All Results\n        </button>\n      </div>\n\n      <div className=\"decrypt-section\">\n        <h3>Decrypt</h3>\n        <input\n          type=\"text\"\n          value={encryptedText}\n          onChange={(e) => setEncryptedText(e.target.value)}\n          placeholder=\"Enter encrypted text\"\n        />\n        <button onClick={handleDecrypt}>Decrypt</button>\n      </div>\n\n      <div className=\"result-section\">\n        <p><strong>Result:</strong> {result}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACU,aAAa,CAAEC,gBAAgB,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACY,mBAAmB,CAAEC,sBAAsB,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAClE,KAAM,CAACc,MAAM,CAAEC,SAAS,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACgB,SAAS,CAAEC,YAAY,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACkB,UAAU,CAAEC,aAAa,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACoB,KAAK,CAAEC,QAAQ,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACsB,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGvB,QAAQ,CAAC,KAAK,CAAC,CACjE,KAAM,CAACwB,kBAAkB,CAAEC,qBAAqB,CAAC,CAAGzB,QAAQ,CAAC,KAAK,CAAC,CACnE,KAAM,CAAC0B,MAAM,CAAEC,SAAS,CAAC,CAAG3B,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAAC4B,IAAI,CAAEC,OAAO,CAAC,CAAG7B,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAAC8B,SAAS,CAAEC,YAAY,CAAC,CAAG/B,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACgC,eAAe,CAAEC,kBAAkB,CAAC,CAAGjC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC1D,KAAM,CAACkC,kBAAkB,CAAEC,qBAAqB,CAAC,CAAGnC,QAAQ,CAAC,IAAI,CAAC,CAClE,KAAM,CAACoC,UAAU,CAAEC,aAAa,CAAC,CAAGrC,QAAQ,CAAC,KAAK,CAAC,CAAE;AAErDC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAqC,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAArC,KAAK,CAACsC,GAAG,CAAC,yCAAyC,CAAE,CAC1EC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAChD,CAAC,CAAC,CACFC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEJ,QAAQ,CAACK,IAAI,CAAC,CAC5C3B,YAAY,CAACsB,QAAQ,CAACK,IAAI,CAACC,cAAc,CAAC,CAC1C1B,aAAa,CAACoB,QAAQ,CAACK,IAAI,CAACE,eAAe,CAAC,CAC5CzB,QAAQ,CAAC,EAAE,CAAC,CACd,CAAE,MAAOD,KAAK,CAAE,CACdsB,OAAO,CAACtB,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAACmB,QAAQ,CAAGnB,KAAK,CAACmB,QAAQ,CAACK,IAAI,CAAGxB,KAAK,CAAC2B,OAAO,CAAC,CAC3F1B,QAAQ,CAAC,iCAAiCD,KAAK,CAACmB,QAAQ,CAAGS,IAAI,CAACC,SAAS,CAAC7B,KAAK,CAACmB,QAAQ,CAACK,IAAI,CAAC,CAAGxB,KAAK,CAAC2B,OAAO,EAAE,CAAC,CACnH,CACF,CAAC,CACDT,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAY,cAAc,CAAI1C,IAAI,EAAK,CAC/B,GAAI,CAACA,IAAI,CAAE,MAAO,EAAE,CACpB,MAAO,CAAAA,IAAI,CACR2C,KAAK,CAAC,GAAG,CAAC,CACVC,GAAG,CAACC,IAAI,EAAI,CACX,GAAI,CAAAvC,MAAM,CAAG,EAAE,CACf,IAAK,GAAI,CAAAwC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGD,IAAI,CAACE,MAAM,CAAED,CAAC,EAAI,CAAC,CAAE,CACvCxC,MAAM,EAAIuC,IAAI,CAACC,CAAC,CAAC,EAAI,EAAE,CACzB,CACA,MAAO,CAAAxC,MAAM,CACf,CAAC,CAAC,CACD0C,IAAI,CAAC,EAAE,CAAC,CACb,CAAC,CAED,KAAM,CAAAC,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CAACzC,SAAS,EAAI,CAACE,UAAU,CAAE,CAC7BG,QAAQ,CAAC,kDAAkD,CAAC,CAC5D,OACF,CACA,KAAM,CAAAqC,gBAAgB,CAAGR,cAAc,CAAC1C,IAAI,CAAC,CAC7CmB,SAAS,CAAC+B,gBAAgB,CAAC,CAC3B,GAAI,CACF,KAAM,CAAAC,YAAY,CAAG,KAAM,CAAAzD,KAAK,CAAC0D,IAAI,CACnC,gCAAgC,CAChC,CAAElC,MAAM,CAAEgC,gBAAiB,CAAC,CAC5B,CAAEjB,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAE,CACpD,CAAC,CACD,KAAM,CAAEb,IAAI,CAAEiC,YAAa,CAAC,CAAGF,YAAY,CAACf,IAAI,CAChDf,OAAO,CAACgC,YAAY,CAAC,CACrBnB,OAAO,CAACC,GAAG,CAAC,SAASkB,YAAY,EAAE,CAAC,CAEpC,KAAM,CAAAC,YAAY,CAAG,KAAM,CAAA5D,KAAK,CAAC0D,IAAI,CACnC,gCAAgC,CAChC,CAAEhC,IAAI,CAAEiC,YAAa,CAAC,CACtB,CAAEpB,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAE,CACpD,CAAC,CACD,KAAM,CAAEX,SAAS,CAAEiC,iBAAkB,CAAC,CAAGD,YAAY,CAAClB,IAAI,CAC1Db,YAAY,CAACgC,iBAAiB,CAAC,CAC/BrB,OAAO,CAACC,GAAG,CAAC,cAAcoB,iBAAiB,EAAE,CAAC,CAE9C,KAAM,CAAAC,eAAe,CAAG,KAAM,CAAA9D,KAAK,CAAC0D,IAAI,CACtC,mCAAmC,CACnC,CAAEpD,IAAI,CAAEA,IAAI,CAAEkB,MAAM,CAAEgC,gBAAiB,CAAC,CACxC,CAAEjB,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAE,CACpD,CAAC,CACD,KAAM,CAAEwB,cAAc,CAAEC,qBAAqB,CAAEpC,SAAU,CAAC,CAAGkC,eAAe,CAACpB,IAAI,CACjF,KAAM,CAAAuB,iBAAiB,CAAG,GAAGD,qBAAqB,KAAKD,cAAc,EAAE,CACvEtD,gBAAgB,CAACwD,iBAAiB,CAAC,CACnCtD,sBAAsB,CAACqD,qBAAqB,CAAC,CAC7CnD,SAAS,CAACoD,iBAAiB,CAAC,CAC5B9C,QAAQ,CAAC,EAAE,CAAC,CACd,CAAE,MAAOD,KAAK,CAAE,CACdsB,OAAO,CAACtB,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAACmB,QAAQ,CAAGnB,KAAK,CAACmB,QAAQ,CAACK,IAAI,CAAGxB,KAAK,CAAC2B,OAAO,CAAC,CAC7E1B,QAAQ,CAAC,mBAAmBD,KAAK,CAACmB,QAAQ,CAAGS,IAAI,CAACC,SAAS,CAAC7B,KAAK,CAACmB,QAAQ,CAACK,IAAI,CAAC,CAAGxB,KAAK,CAAC2B,OAAO,EAAE,CAAC,CACrG,CACF,CAAC,CAED,KAAM,CAAAqB,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CAAC1D,aAAa,CAAE,CAClBW,QAAQ,CAAC,6BAA6B,CAAC,CACvC,OACF,CACA,KAAM,CAACT,mBAAmB,CAAEyD,iBAAiB,CAAC,CAAG3D,aAAa,CAACyC,KAAK,CAAC,IAAI,CAAC,CAC1E,GAAI,CAACvC,mBAAmB,EAAI,CAACyD,iBAAiB,CAAE,CAC9ChD,QAAQ,CAAC,uFAAuF,CAAC,CACjG,OACF,CACA,GAAI,CACF,KAAM,CAAAkB,QAAQ,CAAG,KAAM,CAAArC,KAAK,CAAC0D,IAAI,CAC/B,mCAAmC,CACnC,CACEK,cAAc,CAAEI,iBAAiB,CACjCH,qBAAqB,CAAEtD,mBAAmB,CAC1CkB,SAAS,CAAEA,SAAS,CACpBJ,MAAM,CAAEA,MAAM,CACd4C,gBAAgB,CAAEpC,kBAAkB,CAAGF,eAAe,CAACE,kBAAkB,CAAC,CAAG,IAC/E,CAAC,CACD,CAAEO,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAE,CACpD,CAAC,CACD,KAAM,CAAE8B,SAAS,CAAEC,eAAgB,CAAC,CAAGjC,QAAQ,CAACK,IAAI,CACpD7B,SAAS,CAAC,cAAcwD,SAAS,sBAAsBC,eAAe,EAAE,CAAC,CACzEnD,QAAQ,CAAC,EAAE,CAAC,CACd,CAAE,MAAOD,KAAK,CAAE,CACdsB,OAAO,CAACtB,KAAK,CAAC,mBAAmB,CAAEA,KAAK,CAACmB,QAAQ,CAAGnB,KAAK,CAACmB,QAAQ,CAACK,IAAI,CAAGxB,KAAK,CAAC2B,OAAO,CAAC,CACxF1B,QAAQ,CAAC,gCAAgCD,KAAK,CAACmB,QAAQ,CAAGS,IAAI,CAACC,SAAS,CAAC7B,KAAK,CAACmB,QAAQ,CAACK,IAAI,CAAC,CAAGxB,KAAK,CAAC2B,OAAO,EAAE,CAAC,CAClH,CACF,CAAC,CAED,KAAM,CAAA0B,SAAS,CAAGA,CAACC,GAAG,CAAEC,OAAO,GAAK,CAClC,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAACH,GAAG,CAAC,CAAE,CAAEI,IAAI,CAAE,YAAa,CAAC,CAAC,CACpD,KAAM,CAAAC,GAAG,CAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC,CAC5C,KAAM,CAAAO,IAAI,CAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CACxCF,IAAI,CAACG,IAAI,CAAGP,GAAG,CACfI,IAAI,CAACI,QAAQ,CAAG,GAAGZ,OAAO,UAAU,CACpCS,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC,CAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC,CACZN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,IAAI,CAAC,CAC/BH,MAAM,CAACC,GAAG,CAACW,eAAe,CAACb,GAAG,CAAC,CACjC,CAAC,CAED,KAAM,CAAAc,eAAe,CAAInB,GAAG,EAAK,CAC/BoB,SAAS,CAACC,SAAS,CAACC,SAAS,CAACtB,GAAG,CAAC,CAACuB,IAAI,CAAC,IAAM,CAC5CC,KAAK,CAAC,sBAAsB,CAAC,CAC/B,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,EAAI,CACd/E,QAAQ,CAAC,mBAAmB+E,GAAG,CAACrD,OAAO,EAAE,CAAC,CAC5C,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAsD,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAAzB,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAACnD,MAAM,CAAC,CAAE,CAAEoD,IAAI,CAAE,YAAa,CAAC,CAAC,CACvD,KAAM,CAAAC,GAAG,CAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC,CAC5C,KAAM,CAAAO,IAAI,CAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CACxCF,IAAI,CAACG,IAAI,CAAGP,GAAG,CACfI,IAAI,CAACI,QAAQ,CAAG,YAAY,CAC5BH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC,CAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC,CACZN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,IAAI,CAAC,CAC/BH,MAAM,CAACC,GAAG,CAACW,eAAe,CAACb,GAAG,CAAC,CACjC,CAAC,CAED,KAAM,CAAAuB,qBAAqB,CAAGA,CAAA,GAAM,CAClCR,SAAS,CAACC,SAAS,CAACC,SAAS,CAACtE,MAAM,CAAC,CAACuE,IAAI,CAAC,IAAM,CAC/CC,KAAK,CAAC,6BAA6B,CAAC,CACtC,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,EAAI,CACd/E,QAAQ,CAAC,0BAA0B+E,GAAG,CAACrD,OAAO,EAAE,CAAC,CACnD,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAwD,eAAe,CAAIC,KAAK,EAAK,CACjC,KAAM,CAAAC,IAAI,CAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAClC,GAAIF,IAAI,CAAE,CACR,KAAM,CAAAG,MAAM,CAAG,GAAI,CAAAC,UAAU,CAAC,CAAC,CAC/BD,MAAM,CAACE,MAAM,CAAIC,CAAC,EAAK,CACrB,KAAM,CAAAC,UAAU,CAAGD,CAAC,CAACL,MAAM,CAAC5F,MAAM,CAClC,GAAI,CACF,GAAI,CAACkG,UAAU,CAACC,QAAQ,CAAC,4BAA4B,CAAC,EAAI,CAACD,UAAU,CAACC,QAAQ,CAAC,6BAA6B,CAAC,CAAE,CAC7G,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuB,CAAC,CAC1C,CACA,GAAI9E,UAAU,GAAK,KAAK,CAAE,CACxB,GAAI4E,UAAU,CAACC,QAAQ,CAAC,4BAA4B,CAAC,CAAE,CACrDhG,YAAY,CAAC+F,UAAU,CAAC,CAC1B,CAAC,IAAM,IAAIA,UAAU,CAACC,QAAQ,CAAC,6BAA6B,CAAC,CAAE,CAC7D9F,aAAa,CAAC6F,UAAU,CAAC,CAC3B,CACF,CAAC,IAAM,IAAI5E,UAAU,GAAK,OAAO,CAAE,CACjC,KAAM,CAAA+E,KAAK,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CACnCrF,kBAAkB,CAAC,CAAE,GAAGD,eAAe,CAAE,CAACmF,KAAK,EAAGH,UAAW,CAAC,CAAC,CACjE,CACA3F,QAAQ,CAAC,EAAE,CAAC,CACd,CAAE,MAAO+E,GAAG,CAAE,CACZ/E,QAAQ,CAAC,mBAAmB+E,GAAG,CAACrD,OAAO,EAAE,CAAC,CAC5C,CACF,CAAC,CACD6D,MAAM,CAACW,UAAU,CAACd,IAAI,CAAC,CACvBD,KAAK,CAACE,MAAM,CAACc,KAAK,CAAG,EAAE,CACzB,CACF,CAAC,CACD,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAAAC,OAAO,CAAG,CACdhG,MAAM,CACNE,IAAI,CACJE,SAAS,CACTlB,mBAAmB,CACnBF,aAAa,CACbI,MACF,CAAC,CACD,KAAM,CAAA8D,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC7B,IAAI,CAACC,SAAS,CAACyE,OAAO,CAAE,IAAI,CAAE,CAAC,CAAC,CAAC,CAAE,CAAE5C,IAAI,CAAE,kBAAmB,CAAC,CAAC,CACvF,KAAM,CAAAC,GAAG,CAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC,CAC5C,KAAM,CAAAO,IAAI,CAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CACxCF,IAAI,CAACG,IAAI,CAAGP,GAAG,CACfI,IAAI,CAACI,QAAQ,CAAG,qBAAqB,CACrCH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC,CAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC,CACZN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,IAAI,CAAC,CAC/BH,MAAM,CAACC,GAAG,CAACW,eAAe,CAACb,GAAG,CAAC,CACjC,CAAC,CAED,mBACEzE,KAAA,QAAKqH,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBxH,IAAA,OAAAwH,QAAA,CAAI,YAAU,CAAI,CAAC,cAEnBtH,KAAA,QAAKqH,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BxH,IAAA,OAAAwH,QAAA,CAAI,MAAI,CAAI,CAAC,cACbtH,KAAA,QAAKuH,KAAK,CAAE,CAAEC,YAAY,CAAE,gBAAgB,CAAEC,aAAa,CAAE,MAAM,CAAEC,YAAY,CAAE,MAAO,CAAE,CAAAJ,QAAA,eAC1FxH,IAAA,OAAAwH,QAAA,CAAI,WAAS,CAAI,CAAC,cAClBtH,KAAA,MAAAsH,QAAA,eACExH,IAAA,WAAAwH,QAAA,CAAQ,aAAW,CAAQ,CAAC,IAAC,CAACtG,iBAAiB,CAAGN,SAAS,CAAG,GAAGA,SAAS,CAACiH,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,KAAK,cAChG7H,IAAA,WACEuH,SAAS,CAAC,eAAe,CACzBO,OAAO,CAAEA,CAAA,GAAM3G,oBAAoB,CAAC,CAACD,iBAAiB,CAAE,CACxDuG,KAAK,CAAE,CAAEM,UAAU,CAAE,MAAM,CAAEC,OAAO,CAAE,SAAU,CAAE,CAAAR,QAAA,CAEjDtG,iBAAiB,CAAG,QAAQ,CAAG,oBAAoB,CAC9C,CAAC,EACR,CAAC,cACJlB,IAAA,WAAQ8H,OAAO,CAAEA,CAAA,GAAMzD,SAAS,CAACzD,SAAS,CAAE,QAAQ,CAAE,CAAC6G,KAAK,CAAE,CAAEQ,WAAW,CAAE,MAAO,CAAE,CAAAT,QAAA,CAAC,mBAEvF,CAAQ,CAAC,cACTxH,IAAA,WAAQ8H,OAAO,CAAEA,CAAA,GAAMrC,eAAe,CAAC7E,SAAS,CAAE,CAAC6G,KAAK,CAAE,CAAEQ,WAAW,CAAE,MAAO,CAAE,CAAAT,QAAA,CAAC,iBAEnF,CAAQ,CAAC,cAETtH,KAAA,MAAAsH,QAAA,eACExH,IAAA,WAAAwH,QAAA,CAAQ,cAAY,CAAQ,CAAC,IAAC,CAACpG,kBAAkB,CAAGN,UAAU,CAAG,GAAGA,UAAU,CAAC+G,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,KAAK,cACpG7H,IAAA,WACEuH,SAAS,CAAC,eAAe,CACzBO,OAAO,CAAEA,CAAA,GAAMzG,qBAAqB,CAAC,CAACD,kBAAkB,CAAE,CAC1DqG,KAAK,CAAE,CAAEM,UAAU,CAAE,MAAM,CAAEC,OAAO,CAAE,SAAU,CAAE,CAAAR,QAAA,CAEjDpG,kBAAkB,CAAG,QAAQ,CAAG,oBAAoB,CAC/C,CAAC,EACR,CAAC,cACJpB,IAAA,WAAQ8H,OAAO,CAAEA,CAAA,GAAMzD,SAAS,CAACvD,UAAU,CAAE,SAAS,CAAE,CAAC2G,KAAK,CAAE,CAAEQ,WAAW,CAAE,MAAO,CAAE,CAAAT,QAAA,CAAC,oBAEzF,CAAQ,CAAC,cACTxH,IAAA,WAAQ8H,OAAO,CAAEA,CAAA,GAAMrC,eAAe,CAAC3E,UAAU,CAAE,CAAC2G,KAAK,CAAE,CAAEQ,WAAW,CAAE,MAAO,CAAE,CAAAT,QAAA,CAAC,kBAEpF,CAAQ,CAAC,EACN,CAAC,cAENtH,KAAA,QAAKuH,KAAK,CAAE,CAAEC,YAAY,CAAE,gBAAgB,CAAEC,aAAa,CAAE,MAAM,CAAEC,YAAY,CAAE,MAAO,CAAE,CAAAJ,QAAA,eAC1FxH,IAAA,OAAAwH,QAAA,CAAI,YAAU,CAAI,CAAC,cACnBtH,KAAA,UAAAsH,QAAA,EAAO,kBAEL,cAAAtH,KAAA,WACEkH,KAAK,CAAEpF,UAAW,CAClBkG,QAAQ,CAAGvB,CAAC,EAAK1E,aAAa,CAAC0E,CAAC,CAACL,MAAM,CAACc,KAAK,CAAE,CAC/CK,KAAK,CAAE,CAAEM,UAAU,CAAE,MAAM,CAAEC,OAAO,CAAE,KAAM,CAAE,CAAAR,QAAA,eAE9CxH,IAAA,WAAQoH,KAAK,CAAC,KAAK,CAAAI,QAAA,CAAC,UAAQ,CAAQ,CAAC,cACrCxH,IAAA,WAAQoH,KAAK,CAAC,OAAO,CAAAI,QAAA,CAAC,kBAAgB,CAAQ,CAAC,EACzC,CAAC,EACJ,CAAC,cACRtH,KAAA,UAAOuH,KAAK,CAAE,CAAEM,UAAU,CAAE,MAAO,CAAE,CAAAP,QAAA,eACnCxH,IAAA,UAAO0E,IAAI,CAAC,MAAM,CAACwD,QAAQ,CAAE/B,eAAgB,CAACgC,MAAM,CAAC,MAAM,CAACV,KAAK,CAAE,CAAEM,UAAU,CAAE,KAAM,CAAE,CAAE,CAAC,aAE9F,EAAO,CAAC,EACL,CAAC,cAEN7H,KAAA,QAAAsH,QAAA,eACExH,IAAA,OAAAwH,QAAA,CAAI,0BAAwB,CAAI,CAAC,cACjCtH,KAAA,WACEkH,KAAK,CAAEtF,kBAAkB,EAAI,EAAG,CAChCyF,SAAS,CAAC,eAAe,CACzBW,QAAQ,CAAGvB,CAAC,EAAK5E,qBAAqB,CAAC4E,CAAC,CAACL,MAAM,CAACc,KAAK,CAAE,CACvDK,KAAK,CAAE,CAAEW,KAAK,CAAE,MAAM,CAAEJ,OAAO,CAAE,KAAK,CAAEJ,YAAY,CAAE,MAAO,CAAE,CAAAJ,QAAA,eAE/DxH,IAAA,WAAQoH,KAAK,CAAC,EAAE,CAAAI,QAAA,CAAC,cAAY,CAAQ,CAAC,CACrCa,MAAM,CAACC,OAAO,CAAC1G,eAAe,CAAC,CAACoB,GAAG,CAAC,CAAAuF,IAAA,CAAYC,KAAK,OAAhB,CAACC,EAAE,CAAEnE,GAAG,CAAC,CAAAiE,IAAA,oBAC7CrI,KAAA,WAAiBkH,KAAK,CAAEqB,EAAG,CAAAjB,QAAA,EAAC,MACtB,CAACgB,KAAK,CAAG,CAAC,CAAC,aAAW,CAAClE,GAAG,CAACuD,SAAS,CAAC,EAAE,CAAE,EAAE,CAAC,CAAC,MACnD,GAFaY,EAEL,CAAC,EACV,CAAC,EACI,CAAC,EACN,CAAC,CACLzH,KAAK,eAAId,KAAA,MAAGqH,SAAS,CAAC,OAAO,CAAAC,QAAA,eAACxH,IAAA,WAAAwH,QAAA,CAAQ,QAAM,CAAQ,CAAC,IAAC,CAACxG,KAAK,EAAI,CAAC,EAC/D,CAAC,cAENd,KAAA,QAAKqH,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BxH,IAAA,OAAAwH,QAAA,CAAI,SAAO,CAAI,CAAC,cAChBxH,IAAA,UACE0E,IAAI,CAAC,MAAM,CACX0C,KAAK,CAAEhH,IAAK,CACZ8H,QAAQ,CAAGvB,CAAC,EAAKtG,OAAO,CAACsG,CAAC,CAACL,MAAM,CAACc,KAAK,CAAE,CACzCsB,WAAW,CAAC,uBAAuB,CACpC,CAAC,cACF1I,IAAA,WAAQ8H,OAAO,CAAEzE,aAAc,CAAAmE,QAAA,CAAC,SAAO,CAAQ,CAAC,cAChDtH,KAAA,MAAAsH,QAAA,eAAGxH,IAAA,WAAAwH,QAAA,CAAQ,SAAO,CAAQ,CAAC,IAAC,CAAClG,MAAM,EAAI,CAAC,cACxCpB,KAAA,MAAAsH,QAAA,eAAGxH,IAAA,WAAAwH,QAAA,CAAQ,OAAK,CAAQ,CAAC,IAAC,CAAChG,IAAI,EAAI,CAAC,cACpCtB,KAAA,MAAAsH,QAAA,eAAGxH,IAAA,WAAAwH,QAAA,CAAQ,YAAU,CAAQ,CAAC,IAAC,CAAC9F,SAAS,EAAI,CAAC,cAC9CxB,KAAA,MAAAsH,QAAA,eAAGxH,IAAA,WAAAwH,QAAA,CAAQ,wBAAsB,CAAQ,CAAC,IAAC,CAAChH,mBAAmB,EAAI,CAAC,cACpEN,KAAA,MAAAsH,QAAA,eAAGxH,IAAA,WAAAwH,QAAA,CAAQ,iBAAe,CAAQ,CAAC,IAAC,CAAClH,aAAa,EAAI,CAAC,cACvDN,IAAA,WAAQ8H,OAAO,CAAE7B,YAAa,CAACwB,KAAK,CAAE,CAAEQ,WAAW,CAAE,MAAO,CAAE,CAAAT,QAAA,CAAC,eAE/D,CAAQ,CAAC,cACTxH,IAAA,WAAQ8H,OAAO,CAAE5B,qBAAsB,CAACuB,KAAK,CAAE,CAAEQ,WAAW,CAAE,MAAO,CAAE,CAAAT,QAAA,CAAC,aAExE,CAAQ,CAAC,cACTxH,IAAA,WAAQ8H,OAAO,CAAET,aAAc,CAAAG,QAAA,CAAC,oBAEhC,CAAQ,CAAC,EACN,CAAC,cAENtH,KAAA,QAAKqH,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BxH,IAAA,OAAAwH,QAAA,CAAI,SAAO,CAAI,CAAC,cAChBxH,IAAA,UACE0E,IAAI,CAAC,MAAM,CACX0C,KAAK,CAAE9G,aAAc,CACrB4H,QAAQ,CAAGvB,CAAC,EAAKpG,gBAAgB,CAACoG,CAAC,CAACL,MAAM,CAACc,KAAK,CAAE,CAClDsB,WAAW,CAAC,sBAAsB,CACnC,CAAC,cACF1I,IAAA,WAAQ8H,OAAO,CAAE9D,aAAc,CAAAwD,QAAA,CAAC,SAAO,CAAQ,CAAC,EAC7C,CAAC,cAENxH,IAAA,QAAKuH,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAC7BtH,KAAA,MAAAsH,QAAA,eAAGxH,IAAA,WAAAwH,QAAA,CAAQ,SAAO,CAAQ,CAAC,IAAC,CAAC9G,MAAM,EAAI,CAAC,CACrC,CAAC,EACH,CAAC,CAEV,CAEA,cAAe,CAAAP,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}